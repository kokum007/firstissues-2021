
complete.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000186e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000007c  00800060  0000186e  00001902  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001f  008000dc  008000dc  0000197e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000197e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000019dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00001a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ff1  00000000  00000000  00001ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000075e  00000000  00000000  00002aa9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008b1  00000000  00000000  00003207  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000204  00000000  00000000  00003ab8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a8  00000000  00000000  00003cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a1c  00000000  00000000  00004164  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004b80  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__vector_1>
       8:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__vector_2>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 a0 01 	jmp	0x340	; 0x340 <__vector_7>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 16 02 	jmp	0x42c	; 0x42c <__vector_10>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      38:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	ee e6       	ldi	r30, 0x6E	; 110
     16a:	f8 e1       	ldi	r31, 0x18	; 24
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	ac 3d       	cpi	r26, 0xDC	; 220
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	ac ed       	ldi	r26, 0xDC	; 220
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	ab 3f       	cpi	r26, 0xFB	; 251
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 1e 03 	call	0x63c	; 0x63c <main>
     18c:	0c 94 35 0c 	jmp	0x186a	; 0x186a <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <LcdBacklight>:
		LcdChar(str[i]);
	}
}
void LcdCursor(uint8_t Cursor){
	if (Cursor==0)
	{LcdCommand(0xC);
     194:	81 30       	cpi	r24, 0x01	; 1
     196:	21 f4       	brne	.+8      	; 0x1a0 <LcdBacklight+0xc>
     198:	88 e0       	ldi	r24, 0x08	; 8
     19a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     19e:	08 95       	ret
     1a0:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
     1a4:	08 95       	ret

000001a6 <Lcd4bitdata>:
     1a6:	38 2f       	mov	r19, r24
     1a8:	36 2b       	or	r19, r22
     1aa:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1ae:	23 2b       	or	r18, r19
     1b0:	28 bb       	out	0x18, r18	; 24
     1b2:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1b6:	93 2b       	or	r25, r19
     1b8:	94 60       	ori	r25, 0x04	; 4
     1ba:	98 bb       	out	0x18, r25	; 24
     1bc:	ef e8       	ldi	r30, 0x8F	; 143
     1be:	f1 e0       	ldi	r31, 0x01	; 1
     1c0:	31 97       	sbiw	r30, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <Lcd4bitdata+0x1a>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <Lcd4bitdata+0x20>
     1c6:	00 00       	nop
     1c8:	8b 7f       	andi	r24, 0xFB	; 251
     1ca:	68 2b       	or	r22, r24
     1cc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     1d0:	68 2b       	or	r22, r24
     1d2:	68 bb       	out	0x18, r22	; 24
     1d4:	8f e9       	ldi	r24, 0x9F	; 159
     1d6:	9f e0       	ldi	r25, 0x0F	; 15
     1d8:	01 97       	sbiw	r24, 0x01	; 1
     1da:	f1 f7       	brne	.-4      	; 0x1d8 <Lcd4bitdata+0x32>
     1dc:	00 c0       	rjmp	.+0      	; 0x1de <Lcd4bitdata+0x38>
     1de:	00 00       	nop
     1e0:	08 95       	ret

000001e2 <LcdCommand>:
     1e2:	cf 93       	push	r28
     1e4:	c8 2f       	mov	r28, r24
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	80 7f       	andi	r24, 0xF0	; 240
     1ea:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <Lcd4bitdata>
     1ee:	60 e0       	ldi	r22, 0x00	; 0
     1f0:	8c 2f       	mov	r24, r28
     1f2:	82 95       	swap	r24
     1f4:	80 7f       	andi	r24, 0xF0	; 240
     1f6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <Lcd4bitdata>
     1fa:	cf 91       	pop	r28
     1fc:	08 95       	ret

000001fe <LcdInit>:
     1fe:	81 e0       	ldi	r24, 0x01	; 1
     200:	0e 94 ca 00 	call	0x194	; 0x194 <LcdBacklight>
     204:	8f e3       	ldi	r24, 0x3F	; 63
     206:	9c e9       	ldi	r25, 0x9C	; 156
     208:	01 97       	sbiw	r24, 0x01	; 1
     20a:	f1 f7       	brne	.-4      	; 0x208 <LcdInit+0xa>
     20c:	00 c0       	rjmp	.+0      	; 0x20e <LcdInit+0x10>
     20e:	00 00       	nop
     210:	8f ef       	ldi	r24, 0xFF	; 255
     212:	87 bb       	out	0x17, r24	; 23
     214:	82 e0       	ldi	r24, 0x02	; 2
     216:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
     21a:	88 e2       	ldi	r24, 0x28	; 40
     21c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
     220:	8c e0       	ldi	r24, 0x0C	; 12
     222:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
     226:	86 e0       	ldi	r24, 0x06	; 6
     228:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
     22c:	81 e0       	ldi	r24, 0x01	; 1
     22e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
     232:	08 95       	ret

00000234 <LcdChar>:
	Lcd4bitdata(command&0xF0,0);
	Lcd4bitdata((command<<4)&0xF0,0);
	
}

void LcdChar(uint8_t Lcdcharval){
     234:	cf 93       	push	r28
     236:	c8 2f       	mov	r28, r24
	Lcd4bitdata(Lcdcharval&0xF0,1);
     238:	61 e0       	ldi	r22, 0x01	; 1
     23a:	80 7f       	andi	r24, 0xF0	; 240
     23c:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <Lcd4bitdata>
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
     240:	61 e0       	ldi	r22, 0x01	; 1
     242:	8c 2f       	mov	r24, r28
     244:	82 95       	swap	r24
     246:	80 7f       	andi	r24, 0xF0	; 240
     248:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <Lcd4bitdata>
	
}
     24c:	cf 91       	pop	r28
     24e:	08 95       	ret

00000250 <LcdString>:
	LcdString(str);
	
}

void LcdString (char *str)		/* Send string to LCD function */
{
     250:	0f 93       	push	r16
     252:	1f 93       	push	r17
     254:	cf 93       	push	r28
     256:	df 93       	push	r29
     258:	8c 01       	movw	r16, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
     25a:	c0 e0       	ldi	r28, 0x00	; 0
     25c:	d0 e0       	ldi	r29, 0x00	; 0
     25e:	03 c0       	rjmp	.+6      	; 0x266 <LcdString+0x16>
	{
		LcdChar(str[i]);
     260:	0e 94 1a 01 	call	0x234	; 0x234 <LcdChar>
}

void LcdString (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
     264:	21 96       	adiw	r28, 0x01	; 1
     266:	f8 01       	movw	r30, r16
     268:	ec 0f       	add	r30, r28
     26a:	fd 1f       	adc	r31, r29
     26c:	80 81       	ld	r24, Z
     26e:	81 11       	cpse	r24, r1
     270:	f7 cf       	rjmp	.-18     	; 0x260 <LcdString+0x10>
	{
		LcdChar(str[i]);
	}
}
     272:	df 91       	pop	r29
     274:	cf 91       	pop	r28
     276:	1f 91       	pop	r17
     278:	0f 91       	pop	r16
     27a:	08 95       	ret

0000027c <LcdSetCursor>:
	Lcd4bitdata(Lcdcharval&0xF0,1);
	Lcd4bitdata((Lcdcharval<<4)&0xF0,1);
	
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	ea 01       	movw	r28, r20
	uint8_t tempcommand;
	switch(yaxis){
     282:	61 30       	cpi	r22, 0x01	; 1
     284:	31 f0       	breq	.+12     	; 0x292 <LcdSetCursor+0x16>
     286:	58 f0       	brcs	.+22     	; 0x29e <LcdSetCursor+0x22>
     288:	62 30       	cpi	r22, 0x02	; 2
     28a:	29 f0       	breq	.+10     	; 0x296 <LcdSetCursor+0x1a>
     28c:	63 30       	cpi	r22, 0x03	; 3
     28e:	29 f0       	breq	.+10     	; 0x29a <LcdSetCursor+0x1e>
     290:	07 c0       	rjmp	.+14     	; 0x2a0 <LcdSetCursor+0x24>
		case 0:tempcommand=0x80;break;  //yaxis =0
		case 1:tempcommand=0xC0;break;
     292:	90 ec       	ldi	r25, 0xC0	; 192
     294:	05 c0       	rjmp	.+10     	; 0x2a0 <LcdSetCursor+0x24>
		case 2:tempcommand=0x94;break;
     296:	94 e9       	ldi	r25, 0x94	; 148
     298:	03 c0       	rjmp	.+6      	; 0x2a0 <LcdSetCursor+0x24>
		case 3:tempcommand=0xd4;break;		
     29a:	94 ed       	ldi	r25, 0xD4	; 212
     29c:	01 c0       	rjmp	.+2      	; 0x2a0 <LcdSetCursor+0x24>
}

void LcdSetCursor(uint8_t xaxis, uint8_t yaxis,char*str){
	uint8_t tempcommand;
	switch(yaxis){
		case 0:tempcommand=0x80;break;  //yaxis =0
     29e:	90 e8       	ldi	r25, 0x80	; 128
		case 1:tempcommand=0xC0;break;
		case 2:tempcommand=0x94;break;
		case 3:tempcommand=0xd4;break;		
	}
	LcdCommand(tempcommand|(0x0F&xaxis));
     2a0:	8f 70       	andi	r24, 0x0F	; 15
     2a2:	89 2b       	or	r24, r25
     2a4:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
	LcdString(str);
     2a8:	ce 01       	movw	r24, r28
     2aa:	0e 94 28 01 	call	0x250	; 0x250 <LcdString>
	
}
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <__vector_1>:
		{LcdSetCursor(0,1,"               ");
		}
		
	}
}
ISR(INT0_vect){
     2b4:	1f 92       	push	r1
     2b6:	0f 92       	push	r0
     2b8:	0f b6       	in	r0, 0x3f	; 63
     2ba:	0f 92       	push	r0
     2bc:	11 24       	eor	r1, r1
     2be:	8f 93       	push	r24
     2c0:	9f 93       	push	r25
	
	
	
	if (TIMSK&(1<<OCIE1A))
     2c2:	09 b6       	in	r0, 0x39	; 57
     2c4:	04 fe       	sbrs	r0, 4
     2c6:	0f c0       	rjmp	.+30     	; 0x2e6 <__vector_1+0x32>
	{TIMSK&=~(1<<OCIE1A);
     2c8:	89 b7       	in	r24, 0x39	; 57
     2ca:	8f 7e       	andi	r24, 0xEF	; 239
     2cc:	89 bf       	out	0x39, r24	; 57
		if (TCNT1>0)
     2ce:	8c b5       	in	r24, 0x2c	; 44
     2d0:	9d b5       	in	r25, 0x2d	; 45
     2d2:	89 2b       	or	r24, r25
     2d4:	59 f0       	breq	.+22     	; 0x2ec <__vector_1+0x38>
		{PeopleCounter++;
     2d6:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <PeopleCounter>
     2da:	8f 5f       	subi	r24, 0xFF	; 255
     2dc:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <PeopleCounter>
			TCNT1=0;
     2e0:	1d bc       	out	0x2d, r1	; 45
     2e2:	1c bc       	out	0x2c, r1	; 44
     2e4:	03 c0       	rjmp	.+6      	; 0x2ec <__vector_1+0x38>
		}
	}
	else
	{TIMSK|=(1<<OCIE1A);
     2e6:	89 b7       	in	r24, 0x39	; 57
     2e8:	80 61       	ori	r24, 0x10	; 16
     2ea:	89 bf       	out	0x39, r24	; 57
	}
	
	
}
     2ec:	9f 91       	pop	r25
     2ee:	8f 91       	pop	r24
     2f0:	0f 90       	pop	r0
     2f2:	0f be       	out	0x3f, r0	; 63
     2f4:	0f 90       	pop	r0
     2f6:	1f 90       	pop	r1
     2f8:	18 95       	reti

000002fa <__vector_2>:
ISR(INT1_vect){
     2fa:	1f 92       	push	r1
     2fc:	0f 92       	push	r0
     2fe:	0f b6       	in	r0, 0x3f	; 63
     300:	0f 92       	push	r0
     302:	11 24       	eor	r1, r1
     304:	8f 93       	push	r24
     306:	9f 93       	push	r25
	if (TIMSK&(1<<OCIE1A))
     308:	09 b6       	in	r0, 0x39	; 57
     30a:	04 fe       	sbrs	r0, 4
     30c:	0f c0       	rjmp	.+30     	; 0x32c <__vector_2+0x32>
	{TIMSK&=~(1<<OCIE1A);
     30e:	89 b7       	in	r24, 0x39	; 57
     310:	8f 7e       	andi	r24, 0xEF	; 239
     312:	89 bf       	out	0x39, r24	; 57
		if (TCNT1>0)
     314:	8c b5       	in	r24, 0x2c	; 44
     316:	9d b5       	in	r25, 0x2d	; 45
     318:	89 2b       	or	r24, r25
     31a:	59 f0       	breq	.+22     	; 0x332 <__vector_2+0x38>
		{
			if (PeopleCounter>0)
     31c:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <PeopleCounter>
     320:	88 23       	and	r24, r24
     322:	39 f0       	breq	.+14     	; 0x332 <__vector_2+0x38>
			{PeopleCounter--;
     324:	81 50       	subi	r24, 0x01	; 1
     326:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <PeopleCounter>
     32a:	03 c0       	rjmp	.+6      	; 0x332 <__vector_2+0x38>
			}
		}
	}
	else
	{TIMSK|=(1<<OCIE1A);
     32c:	89 b7       	in	r24, 0x39	; 57
     32e:	80 61       	ori	r24, 0x10	; 16
     330:	89 bf       	out	0x39, r24	; 57
	}
}
     332:	9f 91       	pop	r25
     334:	8f 91       	pop	r24
     336:	0f 90       	pop	r0
     338:	0f be       	out	0x3f, r0	; 63
     33a:	0f 90       	pop	r0
     33c:	1f 90       	pop	r1
     33e:	18 95       	reti

00000340 <__vector_7>:
ISR(TIMER1_COMPA_vect){//ultrasonic
     340:	1f 92       	push	r1
     342:	0f 92       	push	r0
     344:	0f b6       	in	r0, 0x3f	; 63
     346:	0f 92       	push	r0
     348:	11 24       	eor	r1, r1
     34a:	8f 93       	push	r24
	
	
	TIMSK&=~(1<<OCIE1A);//enable timer Compare inturrept
     34c:	89 b7       	in	r24, 0x39	; 57
     34e:	8f 7e       	andi	r24, 0xEF	; 239
     350:	89 bf       	out	0x39, r24	; 57
	TCNT1=0;
     352:	1d bc       	out	0x2d, r1	; 45
     354:	1c bc       	out	0x2c, r1	; 44
}
     356:	8f 91       	pop	r24
     358:	0f 90       	pop	r0
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	0f 90       	pop	r0
     35e:	1f 90       	pop	r1
     360:	18 95       	reti

00000362 <ReadADC>:

uint16_t ReadADC(uint8_t ADCchannel)
{
	//select ADC channel with safety mask
	ADMUX = (ADMUX & 0xF0) | (ADCchannel & 0x0F);
     362:	97 b1       	in	r25, 0x07	; 7
     364:	90 7f       	andi	r25, 0xF0	; 240
     366:	8f 70       	andi	r24, 0x0F	; 15
     368:	89 2b       	or	r24, r25
     36a:	87 b9       	out	0x07, r24	; 7
	//single conversion mode
	ADCSRA |= (1<<ADSC);
     36c:	86 b1       	in	r24, 0x06	; 6
     36e:	80 64       	ori	r24, 0x40	; 64
     370:	86 b9       	out	0x06, r24	; 6
	// wait until ADC conversion is complete
	while( ADCSRA & (1<<ADSC) );
     372:	36 99       	sbic	0x06, 6	; 6
     374:	fe cf       	rjmp	.-4      	; 0x372 <ReadADC+0x10>
	return ADCW;
     376:	84 b1       	in	r24, 0x04	; 4
     378:	95 b1       	in	r25, 0x05	; 5
}
     37a:	08 95       	ret

0000037c <servoangle>:

void servoangle(uint8_t pin,uint8_t pinC)
{

	if (pin)
     37c:	81 11       	cpse	r24, r1
     37e:	29 c0       	rjmp	.+82     	; 0x3d2 <servoangle+0x56>
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	51 c0       	rjmp	.+162    	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
	{
		for(uint8_t j=0;j<100;j++){
			PORTD|=(1<<pinC);
     384:	82 b3       	in	r24, 0x12	; 18
     386:	21 e0       	ldi	r18, 0x01	; 1
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	06 2e       	mov	r0, r22
     38c:	02 c0       	rjmp	.+4      	; 0x392 <servoangle+0x16>
     38e:	22 0f       	add	r18, r18
     390:	33 1f       	adc	r19, r19
     392:	0a 94       	dec	r0
     394:	e2 f7       	brpl	.-8      	; 0x38e <servoangle+0x12>
     396:	82 2b       	or	r24, r18
     398:	82 bb       	out	0x12, r24	; 18
			for(uint8_t i=0;i<10;i++){
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	07 c0       	rjmp	.+14     	; 0x3ac <servoangle+0x30>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     39e:	e7 ec       	ldi	r30, 0xC7	; 199
     3a0:	f0 e0       	ldi	r31, 0x00	; 0
     3a2:	31 97       	sbiw	r30, 0x01	; 1
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <servoangle+0x26>
     3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <servoangle+0x2c>
     3a8:	00 00       	nop
     3aa:	8f 5f       	subi	r24, 0xFF	; 255
     3ac:	8a 30       	cpi	r24, 0x0A	; 10
     3ae:	b8 f3       	brcs	.-18     	; 0x39e <servoangle+0x22>
				_delay_us(100);
			}
			PORTD&=~(1<<pinC);
     3b0:	82 b3       	in	r24, 0x12	; 18
     3b2:	20 95       	com	r18
     3b4:	28 23       	and	r18, r24
     3b6:	22 bb       	out	0x12, r18	; 18
			
			
			
			for(uint8_t i=0;i<10;i++){
     3b8:	80 e0       	ldi	r24, 0x00	; 0
     3ba:	07 c0       	rjmp	.+14     	; 0x3ca <servoangle+0x4e>
     3bc:	e7 ec       	ldi	r30, 0xC7	; 199
     3be:	f0 e0       	ldi	r31, 0x00	; 0
     3c0:	31 97       	sbiw	r30, 0x01	; 1
     3c2:	f1 f7       	brne	.-4      	; 0x3c0 <servoangle+0x44>
     3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <servoangle+0x4a>
     3c6:	00 00       	nop
     3c8:	8f 5f       	subi	r24, 0xFF	; 255
     3ca:	8a 30       	cpi	r24, 0x0A	; 10
     3cc:	b8 f3       	brcs	.-18     	; 0x3bc <servoangle+0x40>
void servoangle(uint8_t pin,uint8_t pinC)
{

	if (pin)
	{
		for(uint8_t j=0;j<100;j++){
     3ce:	9f 5f       	subi	r25, 0xFF	; 255
     3d0:	01 c0       	rjmp	.+2      	; 0x3d4 <servoangle+0x58>
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	94 36       	cpi	r25, 0x64	; 100
     3d6:	b0 f2       	brcs	.-84     	; 0x384 <servoangle+0x8>
     3d8:	08 95       	ret
		}
	}
	else
	{for(uint8_t j=0;j<100;j++){
		
		PORTD|=(1<<pinC);
     3da:	82 b3       	in	r24, 0x12	; 18
     3dc:	21 e0       	ldi	r18, 0x01	; 1
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	06 2e       	mov	r0, r22
     3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <servoangle+0x6c>
     3e4:	22 0f       	add	r18, r18
     3e6:	33 1f       	adc	r19, r19
     3e8:	0a 94       	dec	r0
     3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <servoangle+0x68>
     3ec:	82 2b       	or	r24, r18
     3ee:	82 bb       	out	0x12, r24	; 18
		for(uint8_t i=0;i<15;i++){
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	07 c0       	rjmp	.+14     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
     3f4:	e7 ec       	ldi	r30, 0xC7	; 199
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	31 97       	sbiw	r30, 0x01	; 1
     3fa:	f1 f7       	brne	.-4      	; 0x3f8 <servoangle+0x7c>
     3fc:	00 c0       	rjmp	.+0      	; 0x3fe <servoangle+0x82>
     3fe:	00 00       	nop
     400:	8f 5f       	subi	r24, 0xFF	; 255
     402:	8f 30       	cpi	r24, 0x0F	; 15
     404:	b8 f3       	brcs	.-18     	; 0x3f4 <servoangle+0x78>
			_delay_us(100);
		}
		PORTD&=~(1<<pinC);
     406:	82 b3       	in	r24, 0x12	; 18
     408:	20 95       	com	r18
     40a:	28 23       	and	r18, r24
     40c:	22 bb       	out	0x12, r18	; 18
		
			
		for(uint8_t i=0;i<15;i++){
     40e:	80 e0       	ldi	r24, 0x00	; 0
     410:	07 c0       	rjmp	.+14     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     412:	e7 ec       	ldi	r30, 0xC7	; 199
     414:	f0 e0       	ldi	r31, 0x00	; 0
     416:	31 97       	sbiw	r30, 0x01	; 1
     418:	f1 f7       	brne	.-4      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     41a:	00 c0       	rjmp	.+0      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     41c:	00 00       	nop
     41e:	8f 5f       	subi	r24, 0xFF	; 255
     420:	8f 30       	cpi	r24, 0x0F	; 15
     422:	b8 f3       	brcs	.-18     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
				_delay_us(100);
			}
		}
	}
	else
	{for(uint8_t j=0;j<100;j++){
     424:	9f 5f       	subi	r25, 0xFF	; 255
     426:	94 36       	cpi	r25, 0x64	; 100
     428:	c0 f2       	brcs	.-80     	; 0x3da <servoangle+0x5e>
     42a:	08 95       	ret

0000042c <__vector_10>:

}



ISR(TIMER0_COMP_vect){//ultrasonic
     42c:	1f 92       	push	r1
     42e:	0f 92       	push	r0
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	0f 92       	push	r0
     434:	11 24       	eor	r1, r1
     436:	8f 93       	push	r24
     438:	9f 93       	push	r25
	TimerCalVal++;
     43a:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <TimerCalVal>
     43e:	90 91 e2 00 	lds	r25, 0x00E2	; 0x8000e2 <TimerCalVal+0x1>
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	90 93 e2 00 	sts	0x00E2, r25	; 0x8000e2 <TimerCalVal+0x1>
     448:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <TimerCalVal>
	TCNT0=0;
     44c:	12 be       	out	0x32, r1	; 50
	
}
     44e:	9f 91       	pop	r25
     450:	8f 91       	pop	r24
     452:	0f 90       	pop	r0
     454:	0f be       	out	0x3f, r0	; 63
     456:	0f 90       	pop	r0
     458:	1f 90       	pop	r1
     45a:	18 95       	reti

0000045c <loadCellRead>:


float loadCellRead(){
     45c:	cf 92       	push	r12
     45e:	df 92       	push	r13
     460:	ef 92       	push	r14
     462:	ff 92       	push	r15
	hx711H=0;hx711L=0;  //clear variables
     464:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <hx711H>
     468:	10 92 dd 00 	sts	0x00DD, r1	; 0x8000dd <__data_end+0x1>
     46c:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <__data_end>
	for(uint8_t i=0;i<8;i++){  // Load cell data high 8 bits
     470:	80 e0       	ldi	r24, 0x00	; 0
     472:	33 c0       	rjmp	.+102    	; 0x4da <loadCellRead+0x7e>
		PORTC|=(1<<Load_clk); //Clock pin high
     474:	95 b3       	in	r25, 0x15	; 21
     476:	98 60       	ori	r25, 0x08	; 8
     478:	95 bb       	out	0x15, r25	; 21
     47a:	9a e1       	ldi	r25, 0x1A	; 26
     47c:	9a 95       	dec	r25
     47e:	f1 f7       	brne	.-4      	; 0x47c <loadCellRead+0x20>
     480:	00 c0       	rjmp	.+0      	; 0x482 <loadCellRead+0x26>
		_delay_us(10);
		if ((PINC&(1<<Load_data))>>Load_data)  //read data pin
     482:	9a 9b       	sbis	0x13, 2	; 19
     484:	11 c0       	rjmp	.+34     	; 0x4a8 <loadCellRead+0x4c>
		{hx711H|=(1<<(7-i));//set hx 711 varible
     486:	47 e0       	ldi	r20, 0x07	; 7
     488:	50 e0       	ldi	r21, 0x00	; 0
     48a:	48 1b       	sub	r20, r24
     48c:	51 09       	sbc	r21, r1
     48e:	21 e0       	ldi	r18, 0x01	; 1
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	02 c0       	rjmp	.+4      	; 0x498 <loadCellRead+0x3c>
     494:	22 0f       	add	r18, r18
     496:	33 1f       	adc	r19, r19
     498:	4a 95       	dec	r20
     49a:	e2 f7       	brpl	.-8      	; 0x494 <loadCellRead+0x38>
     49c:	90 91 de 00 	lds	r25, 0x00DE	; 0x8000de <hx711H>
     4a0:	29 2b       	or	r18, r25
     4a2:	20 93 de 00 	sts	0x00DE, r18	; 0x8000de <hx711H>
     4a6:	11 c0       	rjmp	.+34     	; 0x4ca <loadCellRead+0x6e>
		}
		else
		{hx711H&=~(1<<(7-i));
     4a8:	47 e0       	ldi	r20, 0x07	; 7
     4aa:	50 e0       	ldi	r21, 0x00	; 0
     4ac:	48 1b       	sub	r20, r24
     4ae:	51 09       	sbc	r21, r1
     4b0:	21 e0       	ldi	r18, 0x01	; 1
     4b2:	30 e0       	ldi	r19, 0x00	; 0
     4b4:	02 c0       	rjmp	.+4      	; 0x4ba <loadCellRead+0x5e>
     4b6:	22 0f       	add	r18, r18
     4b8:	33 1f       	adc	r19, r19
     4ba:	4a 95       	dec	r20
     4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <loadCellRead+0x5a>
     4be:	20 95       	com	r18
     4c0:	90 91 de 00 	lds	r25, 0x00DE	; 0x8000de <hx711H>
     4c4:	29 23       	and	r18, r25
     4c6:	20 93 de 00 	sts	0x00DE, r18	; 0x8000de <hx711H>
		}
		PORTC&=~(1<<Load_clk); //Clock pin low
     4ca:	95 b3       	in	r25, 0x15	; 21
     4cc:	97 7f       	andi	r25, 0xF7	; 247
     4ce:	95 bb       	out	0x15, r25	; 21
     4d0:	9d e0       	ldi	r25, 0x0D	; 13
     4d2:	9a 95       	dec	r25
     4d4:	f1 f7       	brne	.-4      	; 0x4d2 <loadCellRead+0x76>
     4d6:	00 00       	nop
}


float loadCellRead(){
	hx711H=0;hx711L=0;  //clear variables
	for(uint8_t i=0;i<8;i++){  // Load cell data high 8 bits
     4d8:	8f 5f       	subi	r24, 0xFF	; 255
     4da:	88 30       	cpi	r24, 0x08	; 8
     4dc:	58 f2       	brcs	.-106    	; 0x474 <loadCellRead+0x18>
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	3e c0       	rjmp	.+124    	; 0x55e <loadCellRead+0x102>
		_delay_us(5);
	}
	
	
	for(uint8_t i=0;i<16;i++){ // Load cell data low 16 bits
		PORTC|=(1<<Load_clk); //Clock pin high
     4e2:	95 b3       	in	r25, 0x15	; 21
     4e4:	98 60       	ori	r25, 0x08	; 8
     4e6:	95 bb       	out	0x15, r25	; 21
     4e8:	9a e1       	ldi	r25, 0x1A	; 26
     4ea:	9a 95       	dec	r25
     4ec:	f1 f7       	brne	.-4      	; 0x4ea <loadCellRead+0x8e>
     4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <loadCellRead+0x94>
		_delay_us(10);
		if ((PINC&(1<<Load_data))>>Load_data) //read data pin
     4f0:	9a 9b       	sbis	0x13, 2	; 19
     4f2:	16 c0       	rjmp	.+44     	; 0x520 <loadCellRead+0xc4>
		{hx711L|=(1<<(15-i));
     4f4:	4f e0       	ldi	r20, 0x0F	; 15
     4f6:	50 e0       	ldi	r21, 0x00	; 0
     4f8:	48 1b       	sub	r20, r24
     4fa:	51 09       	sbc	r21, r1
     4fc:	21 e0       	ldi	r18, 0x01	; 1
     4fe:	30 e0       	ldi	r19, 0x00	; 0
     500:	02 c0       	rjmp	.+4      	; 0x506 <loadCellRead+0xaa>
     502:	22 0f       	add	r18, r18
     504:	33 1f       	adc	r19, r19
     506:	4a 95       	dec	r20
     508:	e2 f7       	brpl	.-8      	; 0x502 <loadCellRead+0xa6>
     50a:	40 91 dc 00 	lds	r20, 0x00DC	; 0x8000dc <__data_end>
     50e:	50 91 dd 00 	lds	r21, 0x00DD	; 0x8000dd <__data_end+0x1>
     512:	24 2b       	or	r18, r20
     514:	35 2b       	or	r19, r21
     516:	30 93 dd 00 	sts	0x00DD, r19	; 0x8000dd <__data_end+0x1>
     51a:	20 93 dc 00 	sts	0x00DC, r18	; 0x8000dc <__data_end>
     51e:	17 c0       	rjmp	.+46     	; 0x54e <loadCellRead+0xf2>
		}
		else
		{hx711L&=~(1<<(15-i));
     520:	4f e0       	ldi	r20, 0x0F	; 15
     522:	50 e0       	ldi	r21, 0x00	; 0
     524:	48 1b       	sub	r20, r24
     526:	51 09       	sbc	r21, r1
     528:	21 e0       	ldi	r18, 0x01	; 1
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	02 c0       	rjmp	.+4      	; 0x532 <loadCellRead+0xd6>
     52e:	22 0f       	add	r18, r18
     530:	33 1f       	adc	r19, r19
     532:	4a 95       	dec	r20
     534:	e2 f7       	brpl	.-8      	; 0x52e <loadCellRead+0xd2>
     536:	20 95       	com	r18
     538:	30 95       	com	r19
     53a:	40 91 dc 00 	lds	r20, 0x00DC	; 0x8000dc <__data_end>
     53e:	50 91 dd 00 	lds	r21, 0x00DD	; 0x8000dd <__data_end+0x1>
     542:	24 23       	and	r18, r20
     544:	35 23       	and	r19, r21
     546:	30 93 dd 00 	sts	0x00DD, r19	; 0x8000dd <__data_end+0x1>
     54a:	20 93 dc 00 	sts	0x00DC, r18	; 0x8000dc <__data_end>
		}
		PORTC&=~(1<<Load_clk); //Clock pin low
     54e:	95 b3       	in	r25, 0x15	; 21
     550:	97 7f       	andi	r25, 0xF7	; 247
     552:	95 bb       	out	0x15, r25	; 21
     554:	9d e0       	ldi	r25, 0x0D	; 13
     556:	9a 95       	dec	r25
     558:	f1 f7       	brne	.-4      	; 0x556 <loadCellRead+0xfa>
     55a:	00 00       	nop
		PORTC&=~(1<<Load_clk); //Clock pin low
		_delay_us(5);
	}
	
	
	for(uint8_t i=0;i<16;i++){ // Load cell data low 16 bits
     55c:	8f 5f       	subi	r24, 0xFF	; 255
     55e:	80 31       	cpi	r24, 0x10	; 16
     560:	08 f4       	brcc	.+2      	; 0x564 <loadCellRead+0x108>
     562:	bf cf       	rjmp	.-130    	; 0x4e2 <loadCellRead+0x86>
		}
		PORTC&=~(1<<Load_clk); //Clock pin low
		_delay_us(5);
	}
	
	hx711L=hx711L>>1; //shift bits
     564:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <__data_end>
     568:	90 91 dd 00 	lds	r25, 0x00DD	; 0x8000dd <__data_end+0x1>
     56c:	96 95       	lsr	r25
     56e:	87 95       	ror	r24
     570:	90 93 dd 00 	sts	0x00DD, r25	; 0x8000dd <__data_end+0x1>
     574:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__data_end>
	
	if (hx711H&1)  //bit setup
     578:	60 91 de 00 	lds	r22, 0x00DE	; 0x8000de <hx711H>
     57c:	60 ff       	sbrs	r22, 0
     57e:	05 c0       	rjmp	.+10     	; 0x58a <loadCellRead+0x12e>
	{hx711L|=(1<<15);
     580:	90 68       	ori	r25, 0x80	; 128
     582:	90 93 dd 00 	sts	0x00DD, r25	; 0x8000dd <__data_end+0x1>
     586:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__data_end>
	}
	else
	{hx711L&=~(1<<15);
	}
	hx711H=hx711H>>1;
     58a:	66 95       	lsr	r22
     58c:	60 93 de 00 	sts	0x00DE, r22	; 0x8000de <hx711H>
	
	return (hx711H*(65536/18029.6))+hx711L/18029.6; //load cell calibration
     590:	70 e0       	ldi	r23, 0x00	; 0
     592:	80 e0       	ldi	r24, 0x00	; 0
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__floatsisf>
     59a:	24 e6       	ldi	r18, 0x64	; 100
     59c:	32 ea       	ldi	r19, 0xA2	; 162
     59e:	48 e6       	ldi	r20, 0x68	; 104
     5a0:	50 e4       	ldi	r21, 0x40	; 64
     5a2:	0e 94 46 06 	call	0xc8c	; 0xc8c <__mulsf3>
     5a6:	6b 01       	movw	r12, r22
     5a8:	7c 01       	movw	r14, r24
     5aa:	60 91 dc 00 	lds	r22, 0x00DC	; 0x8000dc <__data_end>
     5ae:	70 91 dd 00 	lds	r23, 0x00DD	; 0x8000dd <__data_end+0x1>
     5b2:	80 e0       	ldi	r24, 0x00	; 0
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	0e 94 b3 05 	call	0xb66	; 0xb66 <__floatunsisf>
     5ba:	23 e3       	ldi	r18, 0x33	; 51
     5bc:	3b ed       	ldi	r19, 0xDB	; 219
     5be:	4c e8       	ldi	r20, 0x8C	; 140
     5c0:	56 e4       	ldi	r21, 0x46	; 70
     5c2:	0e 94 12 05 	call	0xa24	; 0xa24 <__divsf3>
     5c6:	9b 01       	movw	r18, r22
     5c8:	ac 01       	movw	r20, r24
     5ca:	c7 01       	movw	r24, r14
     5cc:	b6 01       	movw	r22, r12
     5ce:	0e 94 a6 04 	call	0x94c	; 0x94c <__addsf3>
}
     5d2:	ff 90       	pop	r15
     5d4:	ef 90       	pop	r14
     5d6:	df 90       	pop	r13
     5d8:	cf 90       	pop	r12
     5da:	08 95       	ret

000005dc <ultralengthM>:

void ultralengthM(){
	
	PORTD&=~(1<<4);//TRIG pin low
     5dc:	82 b3       	in	r24, 0x12	; 18
     5de:	8f 7e       	andi	r24, 0xEF	; 239
     5e0:	82 bb       	out	0x12, r24	; 18
     5e2:	85 e8       	ldi	r24, 0x85	; 133
     5e4:	8a 95       	dec	r24
     5e6:	f1 f7       	brne	.-4      	; 0x5e4 <ultralengthM+0x8>
     5e8:	00 00       	nop
	_delay_us(50);//wait 50 micro sec
	PORTD|=(1<<4);//TRIG pin high
     5ea:	82 b3       	in	r24, 0x12	; 18
     5ec:	80 61       	ori	r24, 0x10	; 16
     5ee:	82 bb       	out	0x12, r24	; 18
     5f0:	85 e8       	ldi	r24, 0x85	; 133
     5f2:	8a 95       	dec	r24
     5f4:	f1 f7       	brne	.-4      	; 0x5f2 <ultralengthM+0x16>
     5f6:	00 00       	nop
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<4);////TRIG pin low
     5f8:	82 b3       	in	r24, 0x12	; 18
     5fa:	8f 7e       	andi	r24, 0xEF	; 239
     5fc:	82 bb       	out	0x12, r24	; 18
	while(!(PIND&(1<<5)))//wait for pulse
     5fe:	04 c0       	rjmp	.+8      	; 0x608 <ultralengthM+0x2c>
	TimerCalVal=0;//rest timer
     600:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <TimerCalVal+0x1>
     604:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <TimerCalVal>
	PORTD&=~(1<<4);//TRIG pin low
	_delay_us(50);//wait 50 micro sec
	PORTD|=(1<<4);//TRIG pin high
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<4);////TRIG pin low
	while(!(PIND&(1<<5)))//wait for pulse
     608:	85 9b       	sbis	0x10, 5	; 16
     60a:	fa cf       	rjmp	.-12     	; 0x600 <ultralengthM+0x24>
     60c:	14 c0       	rjmp	.+40     	; 0x636 <ultralengthM+0x5a>
	TimerCalVal=0;//rest timer
	while((PIND&(1<<5)))////wait for pulse down
	ultralength=TimerCalVal/4.1282;//copy timer value
     60e:	60 91 e1 00 	lds	r22, 0x00E1	; 0x8000e1 <TimerCalVal>
     612:	70 91 e2 00 	lds	r23, 0x00E2	; 0x8000e2 <TimerCalVal+0x1>
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0e 94 b3 05 	call	0xb66	; 0xb66 <__floatunsisf>
     61e:	27 e3       	ldi	r18, 0x37	; 55
     620:	3a e1       	ldi	r19, 0x1A	; 26
     622:	44 e8       	ldi	r20, 0x84	; 132
     624:	50 e4       	ldi	r21, 0x40	; 64
     626:	0e 94 12 05 	call	0xa24	; 0xa24 <__divsf3>
     62a:	0e 94 84 05 	call	0xb08	; 0xb08 <__fixunssfsi>
     62e:	70 93 e0 00 	sts	0x00E0, r23	; 0x8000e0 <ultralength+0x1>
     632:	60 93 df 00 	sts	0x00DF, r22	; 0x8000df <ultralength>
	PORTD|=(1<<4);//TRIG pin high
	_delay_us(50);//wait 50 micro sec
	PORTD&=~(1<<4);////TRIG pin low
	while(!(PIND&(1<<5)))//wait for pulse
	TimerCalVal=0;//rest timer
	while((PIND&(1<<5)))////wait for pulse down
     636:	85 99       	sbic	0x10, 5	; 16
     638:	ea cf       	rjmp	.-44     	; 0x60e <ultralengthM+0x32>
	ultralength=TimerCalVal/4.1282;//copy timer value
     63a:	08 95       	ret

0000063c <main>:
#define Load_data 2
#define Load_clk 3

int main(void)
{
	LcdInit();
     63c:	0e 94 ff 00 	call	0x1fe	; 0x1fe <LcdInit>
	LcdSetCursor(4,0,"Welcome");
     640:	41 e6       	ldi	r20, 0x61	; 97
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	60 e0       	ldi	r22, 0x00	; 0
     646:	84 e0       	ldi	r24, 0x04	; 4
     648:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     64c:	2f ef       	ldi	r18, 0xFF	; 255
     64e:	34 e3       	ldi	r19, 0x34	; 52
     650:	8c e0       	ldi	r24, 0x0C	; 12
     652:	21 50       	subi	r18, 0x01	; 1
     654:	30 40       	sbci	r19, 0x00	; 0
     656:	80 40       	sbci	r24, 0x00	; 0
     658:	e1 f7       	brne	.-8      	; 0x652 <main+0x16>
     65a:	00 c0       	rjmp	.+0      	; 0x65c <main+0x20>
     65c:	00 00       	nop
	_delay_ms(500);
	LcdCommand(LCD_CLEARDISPLAY);
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
	MCUCR|=(1<<ISC11)|(1<<ISC10)|(1<<ISC01)|(1<<ISC00);
     664:	85 b7       	in	r24, 0x35	; 53
     666:	8f 60       	ori	r24, 0x0F	; 15
     668:	85 bf       	out	0x35, r24	; 53
	GICR|=(1<<INT0)|(1<<INT1);
     66a:	8b b7       	in	r24, 0x3b	; 59
     66c:	80 6c       	ori	r24, 0xC0	; 192
     66e:	8b bf       	out	0x3b, r24	; 59
	
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));   // prescaler 128
     670:	86 b1       	in	r24, 0x06	; 6
     672:	87 60       	ori	r24, 0x07	; 7
     674:	86 b9       	out	0x06, r24	; 6
	ADMUX |= (1<<REFS0)|(1<<REFS1);					//internal 2.56 v ref
     676:	87 b1       	in	r24, 0x07	; 7
     678:	80 6c       	ori	r24, 0xC0	; 192
     67a:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN);                            // Turn on ADC
     67c:	86 b1       	in	r24, 0x06	; 6
     67e:	80 68       	ori	r24, 0x80	; 128
     680:	86 b9       	out	0x06, r24	; 6
	PORTA|=(1<<1);
     682:	8b b3       	in	r24, 0x1b	; 27
     684:	82 60       	ori	r24, 0x02	; 2
     686:	8b bb       	out	0x1b, r24	; 27
	
	
	TCCR1B|=(1<<CS12)|(1<<CS10)|(1<<WGM12);//Start timer  prescaler =1024
     688:	8e b5       	in	r24, 0x2e	; 46
     68a:	8d 60       	ori	r24, 0x0D	; 13
     68c:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0;
     68e:	1d bc       	out	0x2d, r1	; 45
     690:	1c bc       	out	0x2c, r1	; 44
	OCR1A=31250;
     692:	82 e1       	ldi	r24, 0x12	; 18
     694:	9a e7       	ldi	r25, 0x7A	; 122
     696:	9b bd       	out	0x2b, r25	; 43
     698:	8a bd       	out	0x2a, r24	; 42
	
	/*Ultrasonic Timer Part*/
	DDRD|=(1<<4); //D4 as output
     69a:	81 b3       	in	r24, 0x11	; 17
     69c:	80 61       	ori	r24, 0x10	; 16
     69e:	81 bb       	out	0x11, r24	; 17
	DDRD|=(1<<6); //D6 as output
     6a0:	81 b3       	in	r24, 0x11	; 17
     6a2:	80 64       	ori	r24, 0x40	; 64
     6a4:	81 bb       	out	0x11, r24	; 17
	DDRD|=(1<<7); //D7 as output
     6a6:	81 b3       	in	r24, 0x11	; 17
     6a8:	80 68       	ori	r24, 0x80	; 128
     6aa:	81 bb       	out	0x11, r24	; 17
	TCCR0|=(1<<WGM01);//Enable Compare match mode
     6ac:	83 b7       	in	r24, 0x33	; 51
     6ae:	88 60       	ori	r24, 0x08	; 8
     6b0:	83 bf       	out	0x33, r24	; 51
	TCCR0|=(1<<CS11);//Start timer  prescaler =8
     6b2:	83 b7       	in	r24, 0x33	; 51
     6b4:	82 60       	ori	r24, 0x02	; 2
     6b6:	83 bf       	out	0x33, r24	; 51
	TCNT0=0;
     6b8:	12 be       	out	0x32, r1	; 50
	OCR0=10;
     6ba:	8a e0       	ldi	r24, 0x0A	; 10
     6bc:	8c bf       	out	0x3c, r24	; 60
	/*register value= time*(clock speed/prescale)
	register value=0.000001*(8000000/1)
	register value=10*/
	TIMSK|=(1<<OCIE0);//enable timer Compare inturrept
     6be:	89 b7       	in	r24, 0x39	; 57
     6c0:	82 60       	ori	r24, 0x02	; 2
     6c2:	89 bf       	out	0x39, r24	; 57
	
	DDRC|=(1<<Load_clk); //Load cell clock pin
     6c4:	84 b3       	in	r24, 0x14	; 20
     6c6:	88 60       	ori	r24, 0x08	; 8
     6c8:	84 bb       	out	0x14, r24	; 20
	PORTC&=~(1<<Load_clk);//Clock pin low
     6ca:	85 b3       	in	r24, 0x15	; 21
     6cc:	87 7f       	andi	r24, 0xF7	; 247
     6ce:	85 bb       	out	0x15, r24	; 21
	
	sei();
     6d0:	78 94       	sei
	while (1)
	{
		if (PINC&(1<<7))
     6d2:	9f 9b       	sbis	0x13, 7	; 19
     6d4:	11 c0       	rjmp	.+34     	; 0x6f8 <main+0xbc>
		{
			
			servoangle(1,7);
     6d6:	67 e0       	ldi	r22, 0x07	; 7
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	0e 94 be 01 	call	0x37c	; 0x37c <servoangle>
     6de:	9f ef       	ldi	r25, 0xFF	; 255
     6e0:	29 e6       	ldi	r18, 0x69	; 105
     6e2:	38 e1       	ldi	r19, 0x18	; 24
     6e4:	91 50       	subi	r25, 0x01	; 1
     6e6:	20 40       	sbci	r18, 0x00	; 0
     6e8:	30 40       	sbci	r19, 0x00	; 0
     6ea:	e1 f7       	brne	.-8      	; 0x6e4 <main+0xa8>
     6ec:	00 c0       	rjmp	.+0      	; 0x6ee <main+0xb2>
     6ee:	00 00       	nop
			_delay_ms(1000);
			servoangle(0,7);
     6f0:	67 e0       	ldi	r22, 0x07	; 7
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	0e 94 be 01 	call	0x37c	; 0x37c <servoangle>
		}
		
		
		if ((!(PINA&(1<<1)))&&(PeopleCounter<PeopleLimit))
     6f8:	c9 99       	sbic	0x19, 1	; 25
     6fa:	ec c0       	rjmp	.+472    	; 0x8d4 <__stack+0x75>
     6fc:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <PeopleCounter>
     700:	8a 30       	cpi	r24, 0x0A	; 10
     702:	08 f0       	brcs	.+2      	; 0x706 <main+0xca>
     704:	e7 c0       	rjmp	.+462    	; 0x8d4 <__stack+0x75>
		{	
			TempReading=(ReadADC(0)*0.25024438); //calibrated number
     706:	80 e0       	ldi	r24, 0x00	; 0
     708:	0e 94 b1 01 	call	0x362	; 0x362 <ReadADC>
     70c:	bc 01       	movw	r22, r24
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	0e 94 b3 05 	call	0xb66	; 0xb66 <__floatunsisf>
     716:	28 e0       	ldi	r18, 0x08	; 8
     718:	30 e2       	ldi	r19, 0x20	; 32
     71a:	40 e8       	ldi	r20, 0x80	; 128
     71c:	5e e3       	ldi	r21, 0x3E	; 62
     71e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__mulsf3>
     722:	0e 94 84 05 	call	0xb08	; 0xb08 <__fixunssfsi>
     726:	70 93 e5 00 	sts	0x00E5, r23	; 0x8000e5 <TempReading+0x1>
     72a:	60 93 e4 00 	sts	0x00E4, r22	; 0x8000e4 <TempReading>
			
			if ((TempReading<Tempupper)&&(TempReading>TempLower))
     72e:	6f 51       	subi	r22, 0x1F	; 31
     730:	71 09       	sbc	r23, r1
     732:	69 30       	cpi	r22, 0x09	; 9
     734:	71 05       	cpc	r23, r1
     736:	08 f0       	brcs	.+2      	; 0x73a <main+0xfe>
     738:	bb c0       	rjmp	.+374    	; 0x8b0 <__stack+0x51>
			{
				LcdCommand(LCD_CLEARDISPLAY);
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
				LcdSetCursor(0,0,"Temperature Ok");
     740:	49 e6       	ldi	r20, 0x69	; 105
     742:	50 e0       	ldi	r21, 0x00	; 0
     744:	60 e0       	ldi	r22, 0x00	; 0
     746:	80 e0       	ldi	r24, 0x00	; 0
     748:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
     74c:	8f ef       	ldi	r24, 0xFF	; 255
     74e:	94 e3       	ldi	r25, 0x34	; 52
     750:	2c e0       	ldi	r18, 0x0C	; 12
     752:	81 50       	subi	r24, 0x01	; 1
     754:	90 40       	sbci	r25, 0x00	; 0
     756:	20 40       	sbci	r18, 0x00	; 0
     758:	e1 f7       	brne	.-8      	; 0x752 <main+0x116>
     75a:	00 c0       	rjmp	.+0      	; 0x75c <main+0x120>
     75c:	00 00       	nop
				_delay_ms(500);
				LcdCommand(LCD_CLEARDISPLAY);
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
				
				LcdSetCursor(0,0,"Make feet");
     764:	48 e7       	ldi	r20, 0x78	; 120
     766:	50 e0       	ldi	r21, 0x00	; 0
     768:	60 e0       	ldi	r22, 0x00	; 0
     76a:	80 e0       	ldi	r24, 0x00	; 0
     76c:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
				
				for(uint8_t i=0;i<100;i++){
     770:	f1 2c       	mov	r15, r1
     772:	99 c0       	rjmp	.+306    	; 0x8a6 <__stack+0x47>
				float weight=loadCellRead();
     774:	0e 94 2e 02 	call	0x45c	; 0x45c <loadCellRead>
     778:	06 2f       	mov	r16, r22
     77a:	17 2f       	mov	r17, r23
     77c:	d8 2f       	mov	r29, r24
     77e:	c9 2f       	mov	r28, r25
				sprintf(lcddata,"%0.2fKg",weight);
     780:	9f 93       	push	r25
     782:	8f 93       	push	r24
     784:	7f 93       	push	r23
     786:	6f 93       	push	r22
     788:	82 e8       	ldi	r24, 0x82	; 130
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	9f 93       	push	r25
     78e:	8f 93       	push	r24
     790:	87 ee       	ldi	r24, 0xE7	; 231
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	9f 93       	push	r25
     796:	8f 93       	push	r24
     798:	0e 94 b5 0b 	call	0x176a	; 0x176a <sprintf>
				LcdSetCursor(0,1,lcddata);			
     79c:	47 ee       	ldi	r20, 0xE7	; 231
     79e:	50 e0       	ldi	r21, 0x00	; 0
     7a0:	61 e0       	ldi	r22, 0x01	; 1
     7a2:	80 e0       	ldi	r24, 0x00	; 0
     7a4:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
				if (weight>30)
     7a8:	8d b7       	in	r24, 0x3d	; 61
     7aa:	9e b7       	in	r25, 0x3e	; 62
     7ac:	08 96       	adiw	r24, 0x08	; 8
     7ae:	0f b6       	in	r0, 0x3f	; 63
     7b0:	f8 94       	cli
     7b2:	9e bf       	out	0x3e, r25	; 62
     7b4:	0f be       	out	0x3f, r0	; 63
     7b6:	8d bf       	out	0x3d, r24	; 61
     7b8:	20 e0       	ldi	r18, 0x00	; 0
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	40 ef       	ldi	r20, 0xF0	; 240
     7be:	51 e4       	ldi	r21, 0x41	; 65
     7c0:	60 2f       	mov	r22, r16
     7c2:	71 2f       	mov	r23, r17
     7c4:	8d 2f       	mov	r24, r29
     7c6:	9c 2f       	mov	r25, r28
     7c8:	0e 94 41 06 	call	0xc82	; 0xc82 <__gesf2>
     7cc:	18 16       	cp	r1, r24
     7ce:	0c f0       	brlt	.+2      	; 0x7d2 <main+0x196>
     7d0:	60 c0       	rjmp	.+192    	; 0x892 <__stack+0x33>
				{
					LcdCommand(LCD_CLEARDISPLAY);
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
					LcdSetCursor(0,0,"Please Hand");
     7d8:	4a e8       	ldi	r20, 0x8A	; 138
     7da:	50 e0       	ldi	r21, 0x00	; 0
     7dc:	60 e0       	ldi	r22, 0x00	; 0
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
					
					for(uint8_t j=0;j<100;j++){
     7e4:	c0 e0       	ldi	r28, 0x00	; 0
     7e6:	51 c0       	rjmp	.+162    	; 0x88a <__stack+0x2b>
						ultralengthM();
     7e8:	0e 94 ee 02 	call	0x5dc	; 0x5dc <ultralengthM>
						sprintf(lcddata,"%03ucm",ultralength);
     7ec:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <ultralength+0x1>
     7f0:	8f 93       	push	r24
     7f2:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <ultralength>
     7f6:	8f 93       	push	r24
     7f8:	86 e9       	ldi	r24, 0x96	; 150
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	9f 93       	push	r25
     7fe:	8f 93       	push	r24
     800:	87 ee       	ldi	r24, 0xE7	; 231
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	9f 93       	push	r25
     806:	8f 93       	push	r24
     808:	0e 94 b5 0b 	call	0x176a	; 0x176a <sprintf>
						LcdSetCursor(0,1,lcddata);
     80c:	47 ee       	ldi	r20, 0xE7	; 231
     80e:	50 e0       	ldi	r21, 0x00	; 0
     810:	61 e0       	ldi	r22, 0x01	; 1
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
						if (ultralength<20)
     818:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <ultralength>
     81c:	90 91 e0 00 	lds	r25, 0x00E0	; 0x8000e0 <ultralength+0x1>
     820:	0f 90       	pop	r0
     822:	0f 90       	pop	r0
     824:	0f 90       	pop	r0
     826:	0f 90       	pop	r0
     828:	0f 90       	pop	r0
     82a:	0f 90       	pop	r0
     82c:	44 97       	sbiw	r24, 0x14	; 20
     82e:	18 f5       	brcc	.+70     	; 0x876 <__stack+0x17>
						{
							
							servoangle(1,6);
     830:	66 e0       	ldi	r22, 0x06	; 6
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	0e 94 be 01 	call	0x37c	; 0x37c <servoangle>
     838:	9f ef       	ldi	r25, 0xFF	; 255
     83a:	20 e7       	ldi	r18, 0x70	; 112
     83c:	32 e0       	ldi	r19, 0x02	; 2
     83e:	91 50       	subi	r25, 0x01	; 1
     840:	20 40       	sbci	r18, 0x00	; 0
     842:	30 40       	sbci	r19, 0x00	; 0
     844:	e1 f7       	brne	.-8      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     846:	00 c0       	rjmp	.+0      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     848:	00 00       	nop
							_delay_ms(100);
							servoangle(0,6);
     84a:	66 e0       	ldi	r22, 0x06	; 6
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	0e 94 be 01 	call	0x37c	; 0x37c <servoangle>
							
							servoangle(1,7);
     852:	67 e0       	ldi	r22, 0x07	; 7
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	0e 94 be 01 	call	0x37c	; 0x37c <servoangle>
     85a:	8f ef       	ldi	r24, 0xFF	; 255
     85c:	99 e6       	ldi	r25, 0x69	; 105
     85e:	28 e1       	ldi	r18, 0x18	; 24
     860:	81 50       	subi	r24, 0x01	; 1
     862:	90 40       	sbci	r25, 0x00	; 0
     864:	20 40       	sbci	r18, 0x00	; 0
     866:	e1 f7       	brne	.-8      	; 0x860 <__stack+0x1>
     868:	00 c0       	rjmp	.+0      	; 0x86a <__stack+0xb>
     86a:	00 00       	nop
							_delay_ms(1000);
							servoangle(0,7);
     86c:	67 e0       	ldi	r22, 0x07	; 7
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	0e 94 be 01 	call	0x37c	; 0x37c <servoangle>
							
							
							break;
     874:	2f c0       	rjmp	.+94     	; 0x8d4 <__stack+0x75>
     876:	3f ef       	ldi	r19, 0xFF	; 255
     878:	80 e7       	ldi	r24, 0x70	; 112
     87a:	92 e0       	ldi	r25, 0x02	; 2
     87c:	31 50       	subi	r19, 0x01	; 1
     87e:	80 40       	sbci	r24, 0x00	; 0
     880:	90 40       	sbci	r25, 0x00	; 0
     882:	e1 f7       	brne	.-8      	; 0x87c <__stack+0x1d>
     884:	00 c0       	rjmp	.+0      	; 0x886 <__stack+0x27>
     886:	00 00       	nop
				if (weight>30)
				{
					LcdCommand(LCD_CLEARDISPLAY);
					LcdSetCursor(0,0,"Please Hand");
					
					for(uint8_t j=0;j<100;j++){
     888:	cf 5f       	subi	r28, 0xFF	; 255
     88a:	c4 36       	cpi	r28, 0x64	; 100
     88c:	08 f4       	brcc	.+2      	; 0x890 <__stack+0x31>
     88e:	ac cf       	rjmp	.-168    	; 0x7e8 <main+0x1ac>
     890:	21 c0       	rjmp	.+66     	; 0x8d4 <__stack+0x75>
     892:	2f ef       	ldi	r18, 0xFF	; 255
     894:	30 e7       	ldi	r19, 0x70	; 112
     896:	82 e0       	ldi	r24, 0x02	; 2
     898:	21 50       	subi	r18, 0x01	; 1
     89a:	30 40       	sbci	r19, 0x00	; 0
     89c:	80 40       	sbci	r24, 0x00	; 0
     89e:	e1 f7       	brne	.-8      	; 0x898 <__stack+0x39>
     8a0:	00 c0       	rjmp	.+0      	; 0x8a2 <__stack+0x43>
     8a2:	00 00       	nop
				_delay_ms(500);
				LcdCommand(LCD_CLEARDISPLAY);
				
				LcdSetCursor(0,0,"Make feet");
				
				for(uint8_t i=0;i<100;i++){
     8a4:	f3 94       	inc	r15
     8a6:	93 e6       	ldi	r25, 0x63	; 99
     8a8:	9f 15       	cp	r25, r15
     8aa:	08 f0       	brcs	.+2      	; 0x8ae <__stack+0x4f>
     8ac:	63 cf       	rjmp	.-314    	; 0x774 <main+0x138>
     8ae:	12 c0       	rjmp	.+36     	; 0x8d4 <__stack+0x75>
				
				
				
			} 
			else
			{	LcdCommand(LCD_CLEARDISPLAY);
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LcdCommand>
				LcdSetCursor(0,0,"Try Again");
     8b6:	4d e9       	ldi	r20, 0x9D	; 157
     8b8:	50 e0       	ldi	r21, 0x00	; 0
     8ba:	60 e0       	ldi	r22, 0x00	; 0
     8bc:	80 e0       	ldi	r24, 0x00	; 0
     8be:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
     8c2:	2f ef       	ldi	r18, 0xFF	; 255
     8c4:	39 e6       	ldi	r19, 0x69	; 105
     8c6:	88 e1       	ldi	r24, 0x18	; 24
     8c8:	21 50       	subi	r18, 0x01	; 1
     8ca:	30 40       	sbci	r19, 0x00	; 0
     8cc:	80 40       	sbci	r24, 0x00	; 0
     8ce:	e1 f7       	brne	.-8      	; 0x8c8 <__stack+0x69>
     8d0:	00 c0       	rjmp	.+0      	; 0x8d2 <__stack+0x73>
     8d2:	00 00       	nop
		
		
				
		
		
		sprintf(lcddata,"Count- %02u %03uC  ",PeopleCounter,TempReading);
     8d4:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <TempReading+0x1>
     8d8:	8f 93       	push	r24
     8da:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <TempReading>
     8de:	8f 93       	push	r24
     8e0:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <PeopleCounter>
     8e4:	1f 92       	push	r1
     8e6:	8f 93       	push	r24
     8e8:	87 ea       	ldi	r24, 0xA7	; 167
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	9f 93       	push	r25
     8ee:	8f 93       	push	r24
     8f0:	87 ee       	ldi	r24, 0xE7	; 231
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	9f 93       	push	r25
     8f6:	8f 93       	push	r24
     8f8:	0e 94 b5 0b 	call	0x176a	; 0x176a <sprintf>
		LcdSetCursor(0,0,lcddata);
     8fc:	47 ee       	ldi	r20, 0xE7	; 231
     8fe:	50 e0       	ldi	r21, 0x00	; 0
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
     908:	8f e1       	ldi	r24, 0x1F	; 31
     90a:	9e e4       	ldi	r25, 0x4E	; 78
     90c:	01 97       	sbiw	r24, 0x01	; 1
     90e:	f1 f7       	brne	.-4      	; 0x90c <__stack+0xad>
     910:	00 c0       	rjmp	.+0      	; 0x912 <__stack+0xb3>
     912:	00 00       	nop
		
		_delay_ms(10);
		if (PeopleCounter>5)
     914:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <PeopleCounter>
     918:	2d b7       	in	r18, 0x3d	; 61
     91a:	3e b7       	in	r19, 0x3e	; 62
     91c:	28 5f       	subi	r18, 0xF8	; 248
     91e:	3f 4f       	sbci	r19, 0xFF	; 255
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	f8 94       	cli
     924:	3e bf       	out	0x3e, r19	; 62
     926:	0f be       	out	0x3f, r0	; 63
     928:	2d bf       	out	0x3d, r18	; 61
     92a:	86 30       	cpi	r24, 0x06	; 6
     92c:	38 f0       	brcs	.+14     	; 0x93c <__stack+0xdd>
		{LcdSetCursor(0,1,"People limited  ");
     92e:	4b eb       	ldi	r20, 0xBB	; 187
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	61 e0       	ldi	r22, 0x01	; 1
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
     93a:	cb ce       	rjmp	.-618    	; 0x6d2 <main+0x96>
		}
		else
		{LcdSetCursor(0,1,"               ");
     93c:	4c ec       	ldi	r20, 0xCC	; 204
     93e:	50 e0       	ldi	r21, 0x00	; 0
     940:	61 e0       	ldi	r22, 0x01	; 1
     942:	80 e0       	ldi	r24, 0x00	; 0
     944:	0e 94 3e 01 	call	0x27c	; 0x27c <LcdSetCursor>
     948:	c4 ce       	rjmp	.-632    	; 0x6d2 <main+0x96>

0000094a <__subsf3>:
     94a:	50 58       	subi	r21, 0x80	; 128

0000094c <__addsf3>:
     94c:	bb 27       	eor	r27, r27
     94e:	aa 27       	eor	r26, r26
     950:	0e 94 bd 04 	call	0x97a	; 0x97a <__addsf3x>
     954:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__fp_round>
     958:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__fp_pscA>
     95c:	38 f0       	brcs	.+14     	; 0x96c <__addsf3+0x20>
     95e:	0e 94 00 06 	call	0xc00	; 0xc00 <__fp_pscB>
     962:	20 f0       	brcs	.+8      	; 0x96c <__addsf3+0x20>
     964:	39 f4       	brne	.+14     	; 0x974 <__addsf3+0x28>
     966:	9f 3f       	cpi	r25, 0xFF	; 255
     968:	19 f4       	brne	.+6      	; 0x970 <__addsf3+0x24>
     96a:	26 f4       	brtc	.+8      	; 0x974 <__addsf3+0x28>
     96c:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__fp_nan>
     970:	0e f4       	brtc	.+2      	; 0x974 <__addsf3+0x28>
     972:	e0 95       	com	r30
     974:	e7 fb       	bst	r30, 7
     976:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_inf>

0000097a <__addsf3x>:
     97a:	e9 2f       	mov	r30, r25
     97c:	0e 94 18 06 	call	0xc30	; 0xc30 <__fp_split3>
     980:	58 f3       	brcs	.-42     	; 0x958 <__addsf3+0xc>
     982:	ba 17       	cp	r27, r26
     984:	62 07       	cpc	r22, r18
     986:	73 07       	cpc	r23, r19
     988:	84 07       	cpc	r24, r20
     98a:	95 07       	cpc	r25, r21
     98c:	20 f0       	brcs	.+8      	; 0x996 <__addsf3x+0x1c>
     98e:	79 f4       	brne	.+30     	; 0x9ae <__addsf3x+0x34>
     990:	a6 f5       	brtc	.+104    	; 0x9fa <__addsf3x+0x80>
     992:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <__fp_zero>
     996:	0e f4       	brtc	.+2      	; 0x99a <__addsf3x+0x20>
     998:	e0 95       	com	r30
     99a:	0b 2e       	mov	r0, r27
     99c:	ba 2f       	mov	r27, r26
     99e:	a0 2d       	mov	r26, r0
     9a0:	0b 01       	movw	r0, r22
     9a2:	b9 01       	movw	r22, r18
     9a4:	90 01       	movw	r18, r0
     9a6:	0c 01       	movw	r0, r24
     9a8:	ca 01       	movw	r24, r20
     9aa:	a0 01       	movw	r20, r0
     9ac:	11 24       	eor	r1, r1
     9ae:	ff 27       	eor	r31, r31
     9b0:	59 1b       	sub	r21, r25
     9b2:	99 f0       	breq	.+38     	; 0x9da <__addsf3x+0x60>
     9b4:	59 3f       	cpi	r21, 0xF9	; 249
     9b6:	50 f4       	brcc	.+20     	; 0x9cc <__addsf3x+0x52>
     9b8:	50 3e       	cpi	r21, 0xE0	; 224
     9ba:	68 f1       	brcs	.+90     	; 0xa16 <__addsf3x+0x9c>
     9bc:	1a 16       	cp	r1, r26
     9be:	f0 40       	sbci	r31, 0x00	; 0
     9c0:	a2 2f       	mov	r26, r18
     9c2:	23 2f       	mov	r18, r19
     9c4:	34 2f       	mov	r19, r20
     9c6:	44 27       	eor	r20, r20
     9c8:	58 5f       	subi	r21, 0xF8	; 248
     9ca:	f3 cf       	rjmp	.-26     	; 0x9b2 <__addsf3x+0x38>
     9cc:	46 95       	lsr	r20
     9ce:	37 95       	ror	r19
     9d0:	27 95       	ror	r18
     9d2:	a7 95       	ror	r26
     9d4:	f0 40       	sbci	r31, 0x00	; 0
     9d6:	53 95       	inc	r21
     9d8:	c9 f7       	brne	.-14     	; 0x9cc <__addsf3x+0x52>
     9da:	7e f4       	brtc	.+30     	; 0x9fa <__addsf3x+0x80>
     9dc:	1f 16       	cp	r1, r31
     9de:	ba 0b       	sbc	r27, r26
     9e0:	62 0b       	sbc	r22, r18
     9e2:	73 0b       	sbc	r23, r19
     9e4:	84 0b       	sbc	r24, r20
     9e6:	ba f0       	brmi	.+46     	; 0xa16 <__addsf3x+0x9c>
     9e8:	91 50       	subi	r25, 0x01	; 1
     9ea:	a1 f0       	breq	.+40     	; 0xa14 <__addsf3x+0x9a>
     9ec:	ff 0f       	add	r31, r31
     9ee:	bb 1f       	adc	r27, r27
     9f0:	66 1f       	adc	r22, r22
     9f2:	77 1f       	adc	r23, r23
     9f4:	88 1f       	adc	r24, r24
     9f6:	c2 f7       	brpl	.-16     	; 0x9e8 <__addsf3x+0x6e>
     9f8:	0e c0       	rjmp	.+28     	; 0xa16 <__addsf3x+0x9c>
     9fa:	ba 0f       	add	r27, r26
     9fc:	62 1f       	adc	r22, r18
     9fe:	73 1f       	adc	r23, r19
     a00:	84 1f       	adc	r24, r20
     a02:	48 f4       	brcc	.+18     	; 0xa16 <__addsf3x+0x9c>
     a04:	87 95       	ror	r24
     a06:	77 95       	ror	r23
     a08:	67 95       	ror	r22
     a0a:	b7 95       	ror	r27
     a0c:	f7 95       	ror	r31
     a0e:	9e 3f       	cpi	r25, 0xFE	; 254
     a10:	08 f0       	brcs	.+2      	; 0xa14 <__addsf3x+0x9a>
     a12:	b0 cf       	rjmp	.-160    	; 0x974 <__addsf3+0x28>
     a14:	93 95       	inc	r25
     a16:	88 0f       	add	r24, r24
     a18:	08 f0       	brcs	.+2      	; 0xa1c <__addsf3x+0xa2>
     a1a:	99 27       	eor	r25, r25
     a1c:	ee 0f       	add	r30, r30
     a1e:	97 95       	ror	r25
     a20:	87 95       	ror	r24
     a22:	08 95       	ret

00000a24 <__divsf3>:
     a24:	0e 94 26 05 	call	0xa4c	; 0xa4c <__divsf3x>
     a28:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__fp_round>
     a2c:	0e 94 00 06 	call	0xc00	; 0xc00 <__fp_pscB>
     a30:	58 f0       	brcs	.+22     	; 0xa48 <__divsf3+0x24>
     a32:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__fp_pscA>
     a36:	40 f0       	brcs	.+16     	; 0xa48 <__divsf3+0x24>
     a38:	29 f4       	brne	.+10     	; 0xa44 <__divsf3+0x20>
     a3a:	5f 3f       	cpi	r21, 0xFF	; 255
     a3c:	29 f0       	breq	.+10     	; 0xa48 <__divsf3+0x24>
     a3e:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_inf>
     a42:	51 11       	cpse	r21, r1
     a44:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_szero>
     a48:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__fp_nan>

00000a4c <__divsf3x>:
     a4c:	0e 94 18 06 	call	0xc30	; 0xc30 <__fp_split3>
     a50:	68 f3       	brcs	.-38     	; 0xa2c <__divsf3+0x8>

00000a52 <__divsf3_pse>:
     a52:	99 23       	and	r25, r25
     a54:	b1 f3       	breq	.-20     	; 0xa42 <__divsf3+0x1e>
     a56:	55 23       	and	r21, r21
     a58:	91 f3       	breq	.-28     	; 0xa3e <__divsf3+0x1a>
     a5a:	95 1b       	sub	r25, r21
     a5c:	55 0b       	sbc	r21, r21
     a5e:	bb 27       	eor	r27, r27
     a60:	aa 27       	eor	r26, r26
     a62:	62 17       	cp	r22, r18
     a64:	73 07       	cpc	r23, r19
     a66:	84 07       	cpc	r24, r20
     a68:	38 f0       	brcs	.+14     	; 0xa78 <__divsf3_pse+0x26>
     a6a:	9f 5f       	subi	r25, 0xFF	; 255
     a6c:	5f 4f       	sbci	r21, 0xFF	; 255
     a6e:	22 0f       	add	r18, r18
     a70:	33 1f       	adc	r19, r19
     a72:	44 1f       	adc	r20, r20
     a74:	aa 1f       	adc	r26, r26
     a76:	a9 f3       	breq	.-22     	; 0xa62 <__divsf3_pse+0x10>
     a78:	35 d0       	rcall	.+106    	; 0xae4 <__divsf3_pse+0x92>
     a7a:	0e 2e       	mov	r0, r30
     a7c:	3a f0       	brmi	.+14     	; 0xa8c <__divsf3_pse+0x3a>
     a7e:	e0 e8       	ldi	r30, 0x80	; 128
     a80:	32 d0       	rcall	.+100    	; 0xae6 <__divsf3_pse+0x94>
     a82:	91 50       	subi	r25, 0x01	; 1
     a84:	50 40       	sbci	r21, 0x00	; 0
     a86:	e6 95       	lsr	r30
     a88:	00 1c       	adc	r0, r0
     a8a:	ca f7       	brpl	.-14     	; 0xa7e <__divsf3_pse+0x2c>
     a8c:	2b d0       	rcall	.+86     	; 0xae4 <__divsf3_pse+0x92>
     a8e:	fe 2f       	mov	r31, r30
     a90:	29 d0       	rcall	.+82     	; 0xae4 <__divsf3_pse+0x92>
     a92:	66 0f       	add	r22, r22
     a94:	77 1f       	adc	r23, r23
     a96:	88 1f       	adc	r24, r24
     a98:	bb 1f       	adc	r27, r27
     a9a:	26 17       	cp	r18, r22
     a9c:	37 07       	cpc	r19, r23
     a9e:	48 07       	cpc	r20, r24
     aa0:	ab 07       	cpc	r26, r27
     aa2:	b0 e8       	ldi	r27, 0x80	; 128
     aa4:	09 f0       	breq	.+2      	; 0xaa8 <__divsf3_pse+0x56>
     aa6:	bb 0b       	sbc	r27, r27
     aa8:	80 2d       	mov	r24, r0
     aaa:	bf 01       	movw	r22, r30
     aac:	ff 27       	eor	r31, r31
     aae:	93 58       	subi	r25, 0x83	; 131
     ab0:	5f 4f       	sbci	r21, 0xFF	; 255
     ab2:	3a f0       	brmi	.+14     	; 0xac2 <__divsf3_pse+0x70>
     ab4:	9e 3f       	cpi	r25, 0xFE	; 254
     ab6:	51 05       	cpc	r21, r1
     ab8:	78 f0       	brcs	.+30     	; 0xad8 <__divsf3_pse+0x86>
     aba:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_inf>
     abe:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_szero>
     ac2:	5f 3f       	cpi	r21, 0xFF	; 255
     ac4:	e4 f3       	brlt	.-8      	; 0xabe <__divsf3_pse+0x6c>
     ac6:	98 3e       	cpi	r25, 0xE8	; 232
     ac8:	d4 f3       	brlt	.-12     	; 0xabe <__divsf3_pse+0x6c>
     aca:	86 95       	lsr	r24
     acc:	77 95       	ror	r23
     ace:	67 95       	ror	r22
     ad0:	b7 95       	ror	r27
     ad2:	f7 95       	ror	r31
     ad4:	9f 5f       	subi	r25, 0xFF	; 255
     ad6:	c9 f7       	brne	.-14     	; 0xaca <__divsf3_pse+0x78>
     ad8:	88 0f       	add	r24, r24
     ada:	91 1d       	adc	r25, r1
     adc:	96 95       	lsr	r25
     ade:	87 95       	ror	r24
     ae0:	97 f9       	bld	r25, 7
     ae2:	08 95       	ret
     ae4:	e1 e0       	ldi	r30, 0x01	; 1
     ae6:	66 0f       	add	r22, r22
     ae8:	77 1f       	adc	r23, r23
     aea:	88 1f       	adc	r24, r24
     aec:	bb 1f       	adc	r27, r27
     aee:	62 17       	cp	r22, r18
     af0:	73 07       	cpc	r23, r19
     af2:	84 07       	cpc	r24, r20
     af4:	ba 07       	cpc	r27, r26
     af6:	20 f0       	brcs	.+8      	; 0xb00 <__divsf3_pse+0xae>
     af8:	62 1b       	sub	r22, r18
     afa:	73 0b       	sbc	r23, r19
     afc:	84 0b       	sbc	r24, r20
     afe:	ba 0b       	sbc	r27, r26
     b00:	ee 1f       	adc	r30, r30
     b02:	88 f7       	brcc	.-30     	; 0xae6 <__divsf3_pse+0x94>
     b04:	e0 95       	com	r30
     b06:	08 95       	ret

00000b08 <__fixunssfsi>:
     b08:	0e 94 20 06 	call	0xc40	; 0xc40 <__fp_splitA>
     b0c:	88 f0       	brcs	.+34     	; 0xb30 <__fixunssfsi+0x28>
     b0e:	9f 57       	subi	r25, 0x7F	; 127
     b10:	98 f0       	brcs	.+38     	; 0xb38 <__fixunssfsi+0x30>
     b12:	b9 2f       	mov	r27, r25
     b14:	99 27       	eor	r25, r25
     b16:	b7 51       	subi	r27, 0x17	; 23
     b18:	b0 f0       	brcs	.+44     	; 0xb46 <__fixunssfsi+0x3e>
     b1a:	e1 f0       	breq	.+56     	; 0xb54 <__fixunssfsi+0x4c>
     b1c:	66 0f       	add	r22, r22
     b1e:	77 1f       	adc	r23, r23
     b20:	88 1f       	adc	r24, r24
     b22:	99 1f       	adc	r25, r25
     b24:	1a f0       	brmi	.+6      	; 0xb2c <__fixunssfsi+0x24>
     b26:	ba 95       	dec	r27
     b28:	c9 f7       	brne	.-14     	; 0xb1c <__fixunssfsi+0x14>
     b2a:	14 c0       	rjmp	.+40     	; 0xb54 <__fixunssfsi+0x4c>
     b2c:	b1 30       	cpi	r27, 0x01	; 1
     b2e:	91 f0       	breq	.+36     	; 0xb54 <__fixunssfsi+0x4c>
     b30:	0e 94 3a 06 	call	0xc74	; 0xc74 <__fp_zero>
     b34:	b1 e0       	ldi	r27, 0x01	; 1
     b36:	08 95       	ret
     b38:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <__fp_zero>
     b3c:	67 2f       	mov	r22, r23
     b3e:	78 2f       	mov	r23, r24
     b40:	88 27       	eor	r24, r24
     b42:	b8 5f       	subi	r27, 0xF8	; 248
     b44:	39 f0       	breq	.+14     	; 0xb54 <__fixunssfsi+0x4c>
     b46:	b9 3f       	cpi	r27, 0xF9	; 249
     b48:	cc f3       	brlt	.-14     	; 0xb3c <__fixunssfsi+0x34>
     b4a:	86 95       	lsr	r24
     b4c:	77 95       	ror	r23
     b4e:	67 95       	ror	r22
     b50:	b3 95       	inc	r27
     b52:	d9 f7       	brne	.-10     	; 0xb4a <__fixunssfsi+0x42>
     b54:	3e f4       	brtc	.+14     	; 0xb64 <__fixunssfsi+0x5c>
     b56:	90 95       	com	r25
     b58:	80 95       	com	r24
     b5a:	70 95       	com	r23
     b5c:	61 95       	neg	r22
     b5e:	7f 4f       	sbci	r23, 0xFF	; 255
     b60:	8f 4f       	sbci	r24, 0xFF	; 255
     b62:	9f 4f       	sbci	r25, 0xFF	; 255
     b64:	08 95       	ret

00000b66 <__floatunsisf>:
     b66:	e8 94       	clt
     b68:	09 c0       	rjmp	.+18     	; 0xb7c <__floatsisf+0x12>

00000b6a <__floatsisf>:
     b6a:	97 fb       	bst	r25, 7
     b6c:	3e f4       	brtc	.+14     	; 0xb7c <__floatsisf+0x12>
     b6e:	90 95       	com	r25
     b70:	80 95       	com	r24
     b72:	70 95       	com	r23
     b74:	61 95       	neg	r22
     b76:	7f 4f       	sbci	r23, 0xFF	; 255
     b78:	8f 4f       	sbci	r24, 0xFF	; 255
     b7a:	9f 4f       	sbci	r25, 0xFF	; 255
     b7c:	99 23       	and	r25, r25
     b7e:	a9 f0       	breq	.+42     	; 0xbaa <__floatsisf+0x40>
     b80:	f9 2f       	mov	r31, r25
     b82:	96 e9       	ldi	r25, 0x96	; 150
     b84:	bb 27       	eor	r27, r27
     b86:	93 95       	inc	r25
     b88:	f6 95       	lsr	r31
     b8a:	87 95       	ror	r24
     b8c:	77 95       	ror	r23
     b8e:	67 95       	ror	r22
     b90:	b7 95       	ror	r27
     b92:	f1 11       	cpse	r31, r1
     b94:	f8 cf       	rjmp	.-16     	; 0xb86 <__floatsisf+0x1c>
     b96:	fa f4       	brpl	.+62     	; 0xbd6 <__floatsisf+0x6c>
     b98:	bb 0f       	add	r27, r27
     b9a:	11 f4       	brne	.+4      	; 0xba0 <__floatsisf+0x36>
     b9c:	60 ff       	sbrs	r22, 0
     b9e:	1b c0       	rjmp	.+54     	; 0xbd6 <__floatsisf+0x6c>
     ba0:	6f 5f       	subi	r22, 0xFF	; 255
     ba2:	7f 4f       	sbci	r23, 0xFF	; 255
     ba4:	8f 4f       	sbci	r24, 0xFF	; 255
     ba6:	9f 4f       	sbci	r25, 0xFF	; 255
     ba8:	16 c0       	rjmp	.+44     	; 0xbd6 <__floatsisf+0x6c>
     baa:	88 23       	and	r24, r24
     bac:	11 f0       	breq	.+4      	; 0xbb2 <__floatsisf+0x48>
     bae:	96 e9       	ldi	r25, 0x96	; 150
     bb0:	11 c0       	rjmp	.+34     	; 0xbd4 <__floatsisf+0x6a>
     bb2:	77 23       	and	r23, r23
     bb4:	21 f0       	breq	.+8      	; 0xbbe <__floatsisf+0x54>
     bb6:	9e e8       	ldi	r25, 0x8E	; 142
     bb8:	87 2f       	mov	r24, r23
     bba:	76 2f       	mov	r23, r22
     bbc:	05 c0       	rjmp	.+10     	; 0xbc8 <__floatsisf+0x5e>
     bbe:	66 23       	and	r22, r22
     bc0:	71 f0       	breq	.+28     	; 0xbde <__floatsisf+0x74>
     bc2:	96 e8       	ldi	r25, 0x86	; 134
     bc4:	86 2f       	mov	r24, r22
     bc6:	70 e0       	ldi	r23, 0x00	; 0
     bc8:	60 e0       	ldi	r22, 0x00	; 0
     bca:	2a f0       	brmi	.+10     	; 0xbd6 <__floatsisf+0x6c>
     bcc:	9a 95       	dec	r25
     bce:	66 0f       	add	r22, r22
     bd0:	77 1f       	adc	r23, r23
     bd2:	88 1f       	adc	r24, r24
     bd4:	da f7       	brpl	.-10     	; 0xbcc <__floatsisf+0x62>
     bd6:	88 0f       	add	r24, r24
     bd8:	96 95       	lsr	r25
     bda:	87 95       	ror	r24
     bdc:	97 f9       	bld	r25, 7
     bde:	08 95       	ret

00000be0 <__fp_inf>:
     be0:	97 f9       	bld	r25, 7
     be2:	9f 67       	ori	r25, 0x7F	; 127
     be4:	80 e8       	ldi	r24, 0x80	; 128
     be6:	70 e0       	ldi	r23, 0x00	; 0
     be8:	60 e0       	ldi	r22, 0x00	; 0
     bea:	08 95       	ret

00000bec <__fp_nan>:
     bec:	9f ef       	ldi	r25, 0xFF	; 255
     bee:	80 ec       	ldi	r24, 0xC0	; 192
     bf0:	08 95       	ret

00000bf2 <__fp_pscA>:
     bf2:	00 24       	eor	r0, r0
     bf4:	0a 94       	dec	r0
     bf6:	16 16       	cp	r1, r22
     bf8:	17 06       	cpc	r1, r23
     bfa:	18 06       	cpc	r1, r24
     bfc:	09 06       	cpc	r0, r25
     bfe:	08 95       	ret

00000c00 <__fp_pscB>:
     c00:	00 24       	eor	r0, r0
     c02:	0a 94       	dec	r0
     c04:	12 16       	cp	r1, r18
     c06:	13 06       	cpc	r1, r19
     c08:	14 06       	cpc	r1, r20
     c0a:	05 06       	cpc	r0, r21
     c0c:	08 95       	ret

00000c0e <__fp_round>:
     c0e:	09 2e       	mov	r0, r25
     c10:	03 94       	inc	r0
     c12:	00 0c       	add	r0, r0
     c14:	11 f4       	brne	.+4      	; 0xc1a <__fp_round+0xc>
     c16:	88 23       	and	r24, r24
     c18:	52 f0       	brmi	.+20     	; 0xc2e <__fp_round+0x20>
     c1a:	bb 0f       	add	r27, r27
     c1c:	40 f4       	brcc	.+16     	; 0xc2e <__fp_round+0x20>
     c1e:	bf 2b       	or	r27, r31
     c20:	11 f4       	brne	.+4      	; 0xc26 <__fp_round+0x18>
     c22:	60 ff       	sbrs	r22, 0
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__fp_round+0x20>
     c26:	6f 5f       	subi	r22, 0xFF	; 255
     c28:	7f 4f       	sbci	r23, 0xFF	; 255
     c2a:	8f 4f       	sbci	r24, 0xFF	; 255
     c2c:	9f 4f       	sbci	r25, 0xFF	; 255
     c2e:	08 95       	ret

00000c30 <__fp_split3>:
     c30:	57 fd       	sbrc	r21, 7
     c32:	90 58       	subi	r25, 0x80	; 128
     c34:	44 0f       	add	r20, r20
     c36:	55 1f       	adc	r21, r21
     c38:	59 f0       	breq	.+22     	; 0xc50 <__fp_splitA+0x10>
     c3a:	5f 3f       	cpi	r21, 0xFF	; 255
     c3c:	71 f0       	breq	.+28     	; 0xc5a <__fp_splitA+0x1a>
     c3e:	47 95       	ror	r20

00000c40 <__fp_splitA>:
     c40:	88 0f       	add	r24, r24
     c42:	97 fb       	bst	r25, 7
     c44:	99 1f       	adc	r25, r25
     c46:	61 f0       	breq	.+24     	; 0xc60 <__fp_splitA+0x20>
     c48:	9f 3f       	cpi	r25, 0xFF	; 255
     c4a:	79 f0       	breq	.+30     	; 0xc6a <__fp_splitA+0x2a>
     c4c:	87 95       	ror	r24
     c4e:	08 95       	ret
     c50:	12 16       	cp	r1, r18
     c52:	13 06       	cpc	r1, r19
     c54:	14 06       	cpc	r1, r20
     c56:	55 1f       	adc	r21, r21
     c58:	f2 cf       	rjmp	.-28     	; 0xc3e <__fp_split3+0xe>
     c5a:	46 95       	lsr	r20
     c5c:	f1 df       	rcall	.-30     	; 0xc40 <__fp_splitA>
     c5e:	08 c0       	rjmp	.+16     	; 0xc70 <__fp_splitA+0x30>
     c60:	16 16       	cp	r1, r22
     c62:	17 06       	cpc	r1, r23
     c64:	18 06       	cpc	r1, r24
     c66:	99 1f       	adc	r25, r25
     c68:	f1 cf       	rjmp	.-30     	; 0xc4c <__fp_splitA+0xc>
     c6a:	86 95       	lsr	r24
     c6c:	71 05       	cpc	r23, r1
     c6e:	61 05       	cpc	r22, r1
     c70:	08 94       	sec
     c72:	08 95       	ret

00000c74 <__fp_zero>:
     c74:	e8 94       	clt

00000c76 <__fp_szero>:
     c76:	bb 27       	eor	r27, r27
     c78:	66 27       	eor	r22, r22
     c7a:	77 27       	eor	r23, r23
     c7c:	cb 01       	movw	r24, r22
     c7e:	97 f9       	bld	r25, 7
     c80:	08 95       	ret

00000c82 <__gesf2>:
     c82:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_cmp>
     c86:	08 f4       	brcc	.+2      	; 0xc8a <__gesf2+0x8>
     c88:	8f ef       	ldi	r24, 0xFF	; 255
     c8a:	08 95       	ret

00000c8c <__mulsf3>:
     c8c:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__mulsf3x>
     c90:	0c 94 07 06 	jmp	0xc0e	; 0xc0e <__fp_round>
     c94:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <__fp_pscA>
     c98:	38 f0       	brcs	.+14     	; 0xca8 <__mulsf3+0x1c>
     c9a:	0e 94 00 06 	call	0xc00	; 0xc00 <__fp_pscB>
     c9e:	20 f0       	brcs	.+8      	; 0xca8 <__mulsf3+0x1c>
     ca0:	95 23       	and	r25, r21
     ca2:	11 f0       	breq	.+4      	; 0xca8 <__mulsf3+0x1c>
     ca4:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_inf>
     ca8:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__fp_nan>
     cac:	11 24       	eor	r1, r1
     cae:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_szero>

00000cb2 <__mulsf3x>:
     cb2:	0e 94 18 06 	call	0xc30	; 0xc30 <__fp_split3>
     cb6:	70 f3       	brcs	.-36     	; 0xc94 <__mulsf3+0x8>

00000cb8 <__mulsf3_pse>:
     cb8:	95 9f       	mul	r25, r21
     cba:	c1 f3       	breq	.-16     	; 0xcac <__mulsf3+0x20>
     cbc:	95 0f       	add	r25, r21
     cbe:	50 e0       	ldi	r21, 0x00	; 0
     cc0:	55 1f       	adc	r21, r21
     cc2:	62 9f       	mul	r22, r18
     cc4:	f0 01       	movw	r30, r0
     cc6:	72 9f       	mul	r23, r18
     cc8:	bb 27       	eor	r27, r27
     cca:	f0 0d       	add	r31, r0
     ccc:	b1 1d       	adc	r27, r1
     cce:	63 9f       	mul	r22, r19
     cd0:	aa 27       	eor	r26, r26
     cd2:	f0 0d       	add	r31, r0
     cd4:	b1 1d       	adc	r27, r1
     cd6:	aa 1f       	adc	r26, r26
     cd8:	64 9f       	mul	r22, r20
     cda:	66 27       	eor	r22, r22
     cdc:	b0 0d       	add	r27, r0
     cde:	a1 1d       	adc	r26, r1
     ce0:	66 1f       	adc	r22, r22
     ce2:	82 9f       	mul	r24, r18
     ce4:	22 27       	eor	r18, r18
     ce6:	b0 0d       	add	r27, r0
     ce8:	a1 1d       	adc	r26, r1
     cea:	62 1f       	adc	r22, r18
     cec:	73 9f       	mul	r23, r19
     cee:	b0 0d       	add	r27, r0
     cf0:	a1 1d       	adc	r26, r1
     cf2:	62 1f       	adc	r22, r18
     cf4:	83 9f       	mul	r24, r19
     cf6:	a0 0d       	add	r26, r0
     cf8:	61 1d       	adc	r22, r1
     cfa:	22 1f       	adc	r18, r18
     cfc:	74 9f       	mul	r23, r20
     cfe:	33 27       	eor	r19, r19
     d00:	a0 0d       	add	r26, r0
     d02:	61 1d       	adc	r22, r1
     d04:	23 1f       	adc	r18, r19
     d06:	84 9f       	mul	r24, r20
     d08:	60 0d       	add	r22, r0
     d0a:	21 1d       	adc	r18, r1
     d0c:	82 2f       	mov	r24, r18
     d0e:	76 2f       	mov	r23, r22
     d10:	6a 2f       	mov	r22, r26
     d12:	11 24       	eor	r1, r1
     d14:	9f 57       	subi	r25, 0x7F	; 127
     d16:	50 40       	sbci	r21, 0x00	; 0
     d18:	9a f0       	brmi	.+38     	; 0xd40 <__mulsf3_pse+0x88>
     d1a:	f1 f0       	breq	.+60     	; 0xd58 <__mulsf3_pse+0xa0>
     d1c:	88 23       	and	r24, r24
     d1e:	4a f0       	brmi	.+18     	; 0xd32 <__mulsf3_pse+0x7a>
     d20:	ee 0f       	add	r30, r30
     d22:	ff 1f       	adc	r31, r31
     d24:	bb 1f       	adc	r27, r27
     d26:	66 1f       	adc	r22, r22
     d28:	77 1f       	adc	r23, r23
     d2a:	88 1f       	adc	r24, r24
     d2c:	91 50       	subi	r25, 0x01	; 1
     d2e:	50 40       	sbci	r21, 0x00	; 0
     d30:	a9 f7       	brne	.-22     	; 0xd1c <__mulsf3_pse+0x64>
     d32:	9e 3f       	cpi	r25, 0xFE	; 254
     d34:	51 05       	cpc	r21, r1
     d36:	80 f0       	brcs	.+32     	; 0xd58 <__mulsf3_pse+0xa0>
     d38:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_inf>
     d3c:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_szero>
     d40:	5f 3f       	cpi	r21, 0xFF	; 255
     d42:	e4 f3       	brlt	.-8      	; 0xd3c <__mulsf3_pse+0x84>
     d44:	98 3e       	cpi	r25, 0xE8	; 232
     d46:	d4 f3       	brlt	.-12     	; 0xd3c <__mulsf3_pse+0x84>
     d48:	86 95       	lsr	r24
     d4a:	77 95       	ror	r23
     d4c:	67 95       	ror	r22
     d4e:	b7 95       	ror	r27
     d50:	f7 95       	ror	r31
     d52:	e7 95       	ror	r30
     d54:	9f 5f       	subi	r25, 0xFF	; 255
     d56:	c1 f7       	brne	.-16     	; 0xd48 <__mulsf3_pse+0x90>
     d58:	fe 2b       	or	r31, r30
     d5a:	88 0f       	add	r24, r24
     d5c:	91 1d       	adc	r25, r1
     d5e:	96 95       	lsr	r25
     d60:	87 95       	ror	r24
     d62:	97 f9       	bld	r25, 7
     d64:	08 95       	ret

00000d66 <__fp_cmp>:
     d66:	99 0f       	add	r25, r25
     d68:	00 08       	sbc	r0, r0
     d6a:	55 0f       	add	r21, r21
     d6c:	aa 0b       	sbc	r26, r26
     d6e:	e0 e8       	ldi	r30, 0x80	; 128
     d70:	fe ef       	ldi	r31, 0xFE	; 254
     d72:	16 16       	cp	r1, r22
     d74:	17 06       	cpc	r1, r23
     d76:	e8 07       	cpc	r30, r24
     d78:	f9 07       	cpc	r31, r25
     d7a:	c0 f0       	brcs	.+48     	; 0xdac <__fp_cmp+0x46>
     d7c:	12 16       	cp	r1, r18
     d7e:	13 06       	cpc	r1, r19
     d80:	e4 07       	cpc	r30, r20
     d82:	f5 07       	cpc	r31, r21
     d84:	98 f0       	brcs	.+38     	; 0xdac <__fp_cmp+0x46>
     d86:	62 1b       	sub	r22, r18
     d88:	73 0b       	sbc	r23, r19
     d8a:	84 0b       	sbc	r24, r20
     d8c:	95 0b       	sbc	r25, r21
     d8e:	39 f4       	brne	.+14     	; 0xd9e <__fp_cmp+0x38>
     d90:	0a 26       	eor	r0, r26
     d92:	61 f0       	breq	.+24     	; 0xdac <__fp_cmp+0x46>
     d94:	23 2b       	or	r18, r19
     d96:	24 2b       	or	r18, r20
     d98:	25 2b       	or	r18, r21
     d9a:	21 f4       	brne	.+8      	; 0xda4 <__fp_cmp+0x3e>
     d9c:	08 95       	ret
     d9e:	0a 26       	eor	r0, r26
     da0:	09 f4       	brne	.+2      	; 0xda4 <__fp_cmp+0x3e>
     da2:	a1 40       	sbci	r26, 0x01	; 1
     da4:	a6 95       	lsr	r26
     da6:	8f ef       	ldi	r24, 0xFF	; 255
     da8:	81 1d       	adc	r24, r1
     daa:	81 1d       	adc	r24, r1
     dac:	08 95       	ret

00000dae <vfprintf>:
     dae:	a0 e1       	ldi	r26, 0x10	; 16
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	ed ed       	ldi	r30, 0xDD	; 221
     db4:	f6 e0       	ldi	r31, 0x06	; 6
     db6:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__prologue_saves__>
     dba:	7c 01       	movw	r14, r24
     dbc:	1b 01       	movw	r2, r22
     dbe:	6a 01       	movw	r12, r20
     dc0:	fc 01       	movw	r30, r24
     dc2:	17 82       	std	Z+7, r1	; 0x07
     dc4:	16 82       	std	Z+6, r1	; 0x06
     dc6:	83 81       	ldd	r24, Z+3	; 0x03
     dc8:	81 ff       	sbrs	r24, 1
     dca:	44 c3       	rjmp	.+1672   	; 0x1454 <vfprintf+0x6a6>
     dcc:	9e 01       	movw	r18, r28
     dce:	2f 5f       	subi	r18, 0xFF	; 255
     dd0:	3f 4f       	sbci	r19, 0xFF	; 255
     dd2:	39 01       	movw	r6, r18
     dd4:	f7 01       	movw	r30, r14
     dd6:	93 81       	ldd	r25, Z+3	; 0x03
     dd8:	f1 01       	movw	r30, r2
     dda:	93 fd       	sbrc	r25, 3
     ddc:	85 91       	lpm	r24, Z+
     dde:	93 ff       	sbrs	r25, 3
     de0:	81 91       	ld	r24, Z+
     de2:	1f 01       	movw	r2, r30
     de4:	88 23       	and	r24, r24
     de6:	09 f4       	brne	.+2      	; 0xdea <vfprintf+0x3c>
     de8:	31 c3       	rjmp	.+1634   	; 0x144c <vfprintf+0x69e>
     dea:	85 32       	cpi	r24, 0x25	; 37
     dec:	39 f4       	brne	.+14     	; 0xdfc <vfprintf+0x4e>
     dee:	93 fd       	sbrc	r25, 3
     df0:	85 91       	lpm	r24, Z+
     df2:	93 ff       	sbrs	r25, 3
     df4:	81 91       	ld	r24, Z+
     df6:	1f 01       	movw	r2, r30
     df8:	85 32       	cpi	r24, 0x25	; 37
     dfa:	39 f4       	brne	.+14     	; 0xe0a <vfprintf+0x5c>
     dfc:	b7 01       	movw	r22, r14
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
     e04:	56 01       	movw	r10, r12
     e06:	65 01       	movw	r12, r10
     e08:	e5 cf       	rjmp	.-54     	; 0xdd4 <vfprintf+0x26>
     e0a:	10 e0       	ldi	r17, 0x00	; 0
     e0c:	51 2c       	mov	r5, r1
     e0e:	91 2c       	mov	r9, r1
     e10:	ff e1       	ldi	r31, 0x1F	; 31
     e12:	f9 15       	cp	r31, r9
     e14:	d8 f0       	brcs	.+54     	; 0xe4c <vfprintf+0x9e>
     e16:	8b 32       	cpi	r24, 0x2B	; 43
     e18:	79 f0       	breq	.+30     	; 0xe38 <vfprintf+0x8a>
     e1a:	38 f4       	brcc	.+14     	; 0xe2a <vfprintf+0x7c>
     e1c:	80 32       	cpi	r24, 0x20	; 32
     e1e:	79 f0       	breq	.+30     	; 0xe3e <vfprintf+0x90>
     e20:	83 32       	cpi	r24, 0x23	; 35
     e22:	a1 f4       	brne	.+40     	; 0xe4c <vfprintf+0x9e>
     e24:	f9 2d       	mov	r31, r9
     e26:	f0 61       	ori	r31, 0x10	; 16
     e28:	2e c0       	rjmp	.+92     	; 0xe86 <vfprintf+0xd8>
     e2a:	8d 32       	cpi	r24, 0x2D	; 45
     e2c:	61 f0       	breq	.+24     	; 0xe46 <vfprintf+0x98>
     e2e:	80 33       	cpi	r24, 0x30	; 48
     e30:	69 f4       	brne	.+26     	; 0xe4c <vfprintf+0x9e>
     e32:	29 2d       	mov	r18, r9
     e34:	21 60       	ori	r18, 0x01	; 1
     e36:	2d c0       	rjmp	.+90     	; 0xe92 <vfprintf+0xe4>
     e38:	39 2d       	mov	r19, r9
     e3a:	32 60       	ori	r19, 0x02	; 2
     e3c:	93 2e       	mov	r9, r19
     e3e:	89 2d       	mov	r24, r9
     e40:	84 60       	ori	r24, 0x04	; 4
     e42:	98 2e       	mov	r9, r24
     e44:	2a c0       	rjmp	.+84     	; 0xe9a <vfprintf+0xec>
     e46:	e9 2d       	mov	r30, r9
     e48:	e8 60       	ori	r30, 0x08	; 8
     e4a:	15 c0       	rjmp	.+42     	; 0xe76 <vfprintf+0xc8>
     e4c:	97 fc       	sbrc	r9, 7
     e4e:	2d c0       	rjmp	.+90     	; 0xeaa <vfprintf+0xfc>
     e50:	20 ed       	ldi	r18, 0xD0	; 208
     e52:	28 0f       	add	r18, r24
     e54:	2a 30       	cpi	r18, 0x0A	; 10
     e56:	88 f4       	brcc	.+34     	; 0xe7a <vfprintf+0xcc>
     e58:	96 fe       	sbrs	r9, 6
     e5a:	06 c0       	rjmp	.+12     	; 0xe68 <vfprintf+0xba>
     e5c:	3a e0       	ldi	r19, 0x0A	; 10
     e5e:	13 9f       	mul	r17, r19
     e60:	20 0d       	add	r18, r0
     e62:	11 24       	eor	r1, r1
     e64:	12 2f       	mov	r17, r18
     e66:	19 c0       	rjmp	.+50     	; 0xe9a <vfprintf+0xec>
     e68:	8a e0       	ldi	r24, 0x0A	; 10
     e6a:	58 9e       	mul	r5, r24
     e6c:	20 0d       	add	r18, r0
     e6e:	11 24       	eor	r1, r1
     e70:	52 2e       	mov	r5, r18
     e72:	e9 2d       	mov	r30, r9
     e74:	e0 62       	ori	r30, 0x20	; 32
     e76:	9e 2e       	mov	r9, r30
     e78:	10 c0       	rjmp	.+32     	; 0xe9a <vfprintf+0xec>
     e7a:	8e 32       	cpi	r24, 0x2E	; 46
     e7c:	31 f4       	brne	.+12     	; 0xe8a <vfprintf+0xdc>
     e7e:	96 fc       	sbrc	r9, 6
     e80:	e5 c2       	rjmp	.+1482   	; 0x144c <vfprintf+0x69e>
     e82:	f9 2d       	mov	r31, r9
     e84:	f0 64       	ori	r31, 0x40	; 64
     e86:	9f 2e       	mov	r9, r31
     e88:	08 c0       	rjmp	.+16     	; 0xe9a <vfprintf+0xec>
     e8a:	8c 36       	cpi	r24, 0x6C	; 108
     e8c:	21 f4       	brne	.+8      	; 0xe96 <vfprintf+0xe8>
     e8e:	29 2d       	mov	r18, r9
     e90:	20 68       	ori	r18, 0x80	; 128
     e92:	92 2e       	mov	r9, r18
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfprintf+0xec>
     e96:	88 36       	cpi	r24, 0x68	; 104
     e98:	41 f4       	brne	.+16     	; 0xeaa <vfprintf+0xfc>
     e9a:	f1 01       	movw	r30, r2
     e9c:	93 fd       	sbrc	r25, 3
     e9e:	85 91       	lpm	r24, Z+
     ea0:	93 ff       	sbrs	r25, 3
     ea2:	81 91       	ld	r24, Z+
     ea4:	1f 01       	movw	r2, r30
     ea6:	81 11       	cpse	r24, r1
     ea8:	b3 cf       	rjmp	.-154    	; 0xe10 <vfprintf+0x62>
     eaa:	9b eb       	ldi	r25, 0xBB	; 187
     eac:	98 0f       	add	r25, r24
     eae:	93 30       	cpi	r25, 0x03	; 3
     eb0:	20 f4       	brcc	.+8      	; 0xeba <vfprintf+0x10c>
     eb2:	99 2d       	mov	r25, r9
     eb4:	90 61       	ori	r25, 0x10	; 16
     eb6:	80 5e       	subi	r24, 0xE0	; 224
     eb8:	07 c0       	rjmp	.+14     	; 0xec8 <vfprintf+0x11a>
     eba:	9b e9       	ldi	r25, 0x9B	; 155
     ebc:	98 0f       	add	r25, r24
     ebe:	93 30       	cpi	r25, 0x03	; 3
     ec0:	08 f0       	brcs	.+2      	; 0xec4 <vfprintf+0x116>
     ec2:	66 c1       	rjmp	.+716    	; 0x1190 <vfprintf+0x3e2>
     ec4:	99 2d       	mov	r25, r9
     ec6:	9f 7e       	andi	r25, 0xEF	; 239
     ec8:	96 ff       	sbrs	r25, 6
     eca:	16 e0       	ldi	r17, 0x06	; 6
     ecc:	9f 73       	andi	r25, 0x3F	; 63
     ece:	99 2e       	mov	r9, r25
     ed0:	85 36       	cpi	r24, 0x65	; 101
     ed2:	19 f4       	brne	.+6      	; 0xeda <vfprintf+0x12c>
     ed4:	90 64       	ori	r25, 0x40	; 64
     ed6:	99 2e       	mov	r9, r25
     ed8:	08 c0       	rjmp	.+16     	; 0xeea <vfprintf+0x13c>
     eda:	86 36       	cpi	r24, 0x66	; 102
     edc:	21 f4       	brne	.+8      	; 0xee6 <vfprintf+0x138>
     ede:	39 2f       	mov	r19, r25
     ee0:	30 68       	ori	r19, 0x80	; 128
     ee2:	93 2e       	mov	r9, r19
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0x13c>
     ee6:	11 11       	cpse	r17, r1
     ee8:	11 50       	subi	r17, 0x01	; 1
     eea:	97 fe       	sbrs	r9, 7
     eec:	07 c0       	rjmp	.+14     	; 0xefc <vfprintf+0x14e>
     eee:	1c 33       	cpi	r17, 0x3C	; 60
     ef0:	50 f4       	brcc	.+20     	; 0xf06 <vfprintf+0x158>
     ef2:	44 24       	eor	r4, r4
     ef4:	43 94       	inc	r4
     ef6:	41 0e       	add	r4, r17
     ef8:	27 e0       	ldi	r18, 0x07	; 7
     efa:	0b c0       	rjmp	.+22     	; 0xf12 <vfprintf+0x164>
     efc:	18 30       	cpi	r17, 0x08	; 8
     efe:	38 f0       	brcs	.+14     	; 0xf0e <vfprintf+0x160>
     f00:	27 e0       	ldi	r18, 0x07	; 7
     f02:	17 e0       	ldi	r17, 0x07	; 7
     f04:	05 c0       	rjmp	.+10     	; 0xf10 <vfprintf+0x162>
     f06:	27 e0       	ldi	r18, 0x07	; 7
     f08:	9c e3       	ldi	r25, 0x3C	; 60
     f0a:	49 2e       	mov	r4, r25
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <vfprintf+0x164>
     f0e:	21 2f       	mov	r18, r17
     f10:	41 2c       	mov	r4, r1
     f12:	56 01       	movw	r10, r12
     f14:	84 e0       	ldi	r24, 0x04	; 4
     f16:	a8 0e       	add	r10, r24
     f18:	b1 1c       	adc	r11, r1
     f1a:	f6 01       	movw	r30, r12
     f1c:	60 81       	ld	r22, Z
     f1e:	71 81       	ldd	r23, Z+1	; 0x01
     f20:	82 81       	ldd	r24, Z+2	; 0x02
     f22:	93 81       	ldd	r25, Z+3	; 0x03
     f24:	04 2d       	mov	r16, r4
     f26:	a3 01       	movw	r20, r6
     f28:	0e 94 8b 0a 	call	0x1516	; 0x1516 <__ftoa_engine>
     f2c:	6c 01       	movw	r12, r24
     f2e:	f9 81       	ldd	r31, Y+1	; 0x01
     f30:	fc 87       	std	Y+12, r31	; 0x0c
     f32:	f0 ff       	sbrs	r31, 0
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <vfprintf+0x18c>
     f36:	f3 ff       	sbrs	r31, 3
     f38:	06 c0       	rjmp	.+12     	; 0xf46 <vfprintf+0x198>
     f3a:	91 fc       	sbrc	r9, 1
     f3c:	06 c0       	rjmp	.+12     	; 0xf4a <vfprintf+0x19c>
     f3e:	92 fe       	sbrs	r9, 2
     f40:	06 c0       	rjmp	.+12     	; 0xf4e <vfprintf+0x1a0>
     f42:	00 e2       	ldi	r16, 0x20	; 32
     f44:	05 c0       	rjmp	.+10     	; 0xf50 <vfprintf+0x1a2>
     f46:	0d e2       	ldi	r16, 0x2D	; 45
     f48:	03 c0       	rjmp	.+6      	; 0xf50 <vfprintf+0x1a2>
     f4a:	0b e2       	ldi	r16, 0x2B	; 43
     f4c:	01 c0       	rjmp	.+2      	; 0xf50 <vfprintf+0x1a2>
     f4e:	00 e0       	ldi	r16, 0x00	; 0
     f50:	8c 85       	ldd	r24, Y+12	; 0x0c
     f52:	8c 70       	andi	r24, 0x0C	; 12
     f54:	19 f0       	breq	.+6      	; 0xf5c <vfprintf+0x1ae>
     f56:	01 11       	cpse	r16, r1
     f58:	5a c2       	rjmp	.+1204   	; 0x140e <vfprintf+0x660>
     f5a:	9b c2       	rjmp	.+1334   	; 0x1492 <vfprintf+0x6e4>
     f5c:	97 fe       	sbrs	r9, 7
     f5e:	10 c0       	rjmp	.+32     	; 0xf80 <vfprintf+0x1d2>
     f60:	4c 0c       	add	r4, r12
     f62:	fc 85       	ldd	r31, Y+12	; 0x0c
     f64:	f4 ff       	sbrs	r31, 4
     f66:	04 c0       	rjmp	.+8      	; 0xf70 <vfprintf+0x1c2>
     f68:	8a 81       	ldd	r24, Y+2	; 0x02
     f6a:	81 33       	cpi	r24, 0x31	; 49
     f6c:	09 f4       	brne	.+2      	; 0xf70 <vfprintf+0x1c2>
     f6e:	4a 94       	dec	r4
     f70:	14 14       	cp	r1, r4
     f72:	74 f5       	brge	.+92     	; 0xfd0 <vfprintf+0x222>
     f74:	28 e0       	ldi	r18, 0x08	; 8
     f76:	24 15       	cp	r18, r4
     f78:	78 f5       	brcc	.+94     	; 0xfd8 <vfprintf+0x22a>
     f7a:	88 e0       	ldi	r24, 0x08	; 8
     f7c:	48 2e       	mov	r4, r24
     f7e:	2c c0       	rjmp	.+88     	; 0xfd8 <vfprintf+0x22a>
     f80:	96 fc       	sbrc	r9, 6
     f82:	2a c0       	rjmp	.+84     	; 0xfd8 <vfprintf+0x22a>
     f84:	81 2f       	mov	r24, r17
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	8c 15       	cp	r24, r12
     f8a:	9d 05       	cpc	r25, r13
     f8c:	9c f0       	brlt	.+38     	; 0xfb4 <vfprintf+0x206>
     f8e:	3c ef       	ldi	r19, 0xFC	; 252
     f90:	c3 16       	cp	r12, r19
     f92:	3f ef       	ldi	r19, 0xFF	; 255
     f94:	d3 06       	cpc	r13, r19
     f96:	74 f0       	brlt	.+28     	; 0xfb4 <vfprintf+0x206>
     f98:	89 2d       	mov	r24, r9
     f9a:	80 68       	ori	r24, 0x80	; 128
     f9c:	98 2e       	mov	r9, r24
     f9e:	0a c0       	rjmp	.+20     	; 0xfb4 <vfprintf+0x206>
     fa0:	e2 e0       	ldi	r30, 0x02	; 2
     fa2:	f0 e0       	ldi	r31, 0x00	; 0
     fa4:	ec 0f       	add	r30, r28
     fa6:	fd 1f       	adc	r31, r29
     fa8:	e1 0f       	add	r30, r17
     faa:	f1 1d       	adc	r31, r1
     fac:	80 81       	ld	r24, Z
     fae:	80 33       	cpi	r24, 0x30	; 48
     fb0:	19 f4       	brne	.+6      	; 0xfb8 <vfprintf+0x20a>
     fb2:	11 50       	subi	r17, 0x01	; 1
     fb4:	11 11       	cpse	r17, r1
     fb6:	f4 cf       	rjmp	.-24     	; 0xfa0 <vfprintf+0x1f2>
     fb8:	97 fe       	sbrs	r9, 7
     fba:	0e c0       	rjmp	.+28     	; 0xfd8 <vfprintf+0x22a>
     fbc:	44 24       	eor	r4, r4
     fbe:	43 94       	inc	r4
     fc0:	41 0e       	add	r4, r17
     fc2:	81 2f       	mov	r24, r17
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	c8 16       	cp	r12, r24
     fc8:	d9 06       	cpc	r13, r25
     fca:	2c f4       	brge	.+10     	; 0xfd6 <vfprintf+0x228>
     fcc:	1c 19       	sub	r17, r12
     fce:	04 c0       	rjmp	.+8      	; 0xfd8 <vfprintf+0x22a>
     fd0:	44 24       	eor	r4, r4
     fd2:	43 94       	inc	r4
     fd4:	01 c0       	rjmp	.+2      	; 0xfd8 <vfprintf+0x22a>
     fd6:	10 e0       	ldi	r17, 0x00	; 0
     fd8:	97 fe       	sbrs	r9, 7
     fda:	06 c0       	rjmp	.+12     	; 0xfe8 <vfprintf+0x23a>
     fdc:	1c 14       	cp	r1, r12
     fde:	1d 04       	cpc	r1, r13
     fe0:	34 f4       	brge	.+12     	; 0xfee <vfprintf+0x240>
     fe2:	c6 01       	movw	r24, r12
     fe4:	01 96       	adiw	r24, 0x01	; 1
     fe6:	05 c0       	rjmp	.+10     	; 0xff2 <vfprintf+0x244>
     fe8:	85 e0       	ldi	r24, 0x05	; 5
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	02 c0       	rjmp	.+4      	; 0xff2 <vfprintf+0x244>
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	01 11       	cpse	r16, r1
     ff4:	01 96       	adiw	r24, 0x01	; 1
     ff6:	11 23       	and	r17, r17
     ff8:	31 f0       	breq	.+12     	; 0x1006 <vfprintf+0x258>
     ffa:	21 2f       	mov	r18, r17
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	2f 5f       	subi	r18, 0xFF	; 255
    1000:	3f 4f       	sbci	r19, 0xFF	; 255
    1002:	82 0f       	add	r24, r18
    1004:	93 1f       	adc	r25, r19
    1006:	25 2d       	mov	r18, r5
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	82 17       	cp	r24, r18
    100c:	93 07       	cpc	r25, r19
    100e:	14 f4       	brge	.+4      	; 0x1014 <vfprintf+0x266>
    1010:	58 1a       	sub	r5, r24
    1012:	01 c0       	rjmp	.+2      	; 0x1016 <vfprintf+0x268>
    1014:	51 2c       	mov	r5, r1
    1016:	89 2d       	mov	r24, r9
    1018:	89 70       	andi	r24, 0x09	; 9
    101a:	49 f4       	brne	.+18     	; 0x102e <vfprintf+0x280>
    101c:	55 20       	and	r5, r5
    101e:	39 f0       	breq	.+14     	; 0x102e <vfprintf+0x280>
    1020:	b7 01       	movw	r22, r14
    1022:	80 e2       	ldi	r24, 0x20	; 32
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    102a:	5a 94       	dec	r5
    102c:	f7 cf       	rjmp	.-18     	; 0x101c <vfprintf+0x26e>
    102e:	00 23       	and	r16, r16
    1030:	29 f0       	breq	.+10     	; 0x103c <vfprintf+0x28e>
    1032:	b7 01       	movw	r22, r14
    1034:	80 2f       	mov	r24, r16
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    103c:	93 fc       	sbrc	r9, 3
    103e:	09 c0       	rjmp	.+18     	; 0x1052 <vfprintf+0x2a4>
    1040:	55 20       	and	r5, r5
    1042:	39 f0       	breq	.+14     	; 0x1052 <vfprintf+0x2a4>
    1044:	b7 01       	movw	r22, r14
    1046:	80 e3       	ldi	r24, 0x30	; 48
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    104e:	5a 94       	dec	r5
    1050:	f7 cf       	rjmp	.-18     	; 0x1040 <vfprintf+0x292>
    1052:	97 fe       	sbrs	r9, 7
    1054:	4c c0       	rjmp	.+152    	; 0x10ee <vfprintf+0x340>
    1056:	46 01       	movw	r8, r12
    1058:	d7 fe       	sbrs	r13, 7
    105a:	02 c0       	rjmp	.+4      	; 0x1060 <vfprintf+0x2b2>
    105c:	81 2c       	mov	r8, r1
    105e:	91 2c       	mov	r9, r1
    1060:	c6 01       	movw	r24, r12
    1062:	88 19       	sub	r24, r8
    1064:	99 09       	sbc	r25, r9
    1066:	f3 01       	movw	r30, r6
    1068:	e8 0f       	add	r30, r24
    106a:	f9 1f       	adc	r31, r25
    106c:	fe 87       	std	Y+14, r31	; 0x0e
    106e:	ed 87       	std	Y+13, r30	; 0x0d
    1070:	96 01       	movw	r18, r12
    1072:	24 19       	sub	r18, r4
    1074:	31 09       	sbc	r19, r1
    1076:	38 8b       	std	Y+16, r19	; 0x10
    1078:	2f 87       	std	Y+15, r18	; 0x0f
    107a:	01 2f       	mov	r16, r17
    107c:	10 e0       	ldi	r17, 0x00	; 0
    107e:	11 95       	neg	r17
    1080:	01 95       	neg	r16
    1082:	11 09       	sbc	r17, r1
    1084:	3f ef       	ldi	r19, 0xFF	; 255
    1086:	83 16       	cp	r8, r19
    1088:	93 06       	cpc	r9, r19
    108a:	29 f4       	brne	.+10     	; 0x1096 <vfprintf+0x2e8>
    108c:	b7 01       	movw	r22, r14
    108e:	8e e2       	ldi	r24, 0x2E	; 46
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1096:	c8 14       	cp	r12, r8
    1098:	d9 04       	cpc	r13, r9
    109a:	4c f0       	brlt	.+18     	; 0x10ae <vfprintf+0x300>
    109c:	8f 85       	ldd	r24, Y+15	; 0x0f
    109e:	98 89       	ldd	r25, Y+16	; 0x10
    10a0:	88 15       	cp	r24, r8
    10a2:	99 05       	cpc	r25, r9
    10a4:	24 f4       	brge	.+8      	; 0x10ae <vfprintf+0x300>
    10a6:	ed 85       	ldd	r30, Y+13	; 0x0d
    10a8:	fe 85       	ldd	r31, Y+14	; 0x0e
    10aa:	81 81       	ldd	r24, Z+1	; 0x01
    10ac:	01 c0       	rjmp	.+2      	; 0x10b0 <vfprintf+0x302>
    10ae:	80 e3       	ldi	r24, 0x30	; 48
    10b0:	f1 e0       	ldi	r31, 0x01	; 1
    10b2:	8f 1a       	sub	r8, r31
    10b4:	91 08       	sbc	r9, r1
    10b6:	2d 85       	ldd	r18, Y+13	; 0x0d
    10b8:	3e 85       	ldd	r19, Y+14	; 0x0e
    10ba:	2f 5f       	subi	r18, 0xFF	; 255
    10bc:	3f 4f       	sbci	r19, 0xFF	; 255
    10be:	3e 87       	std	Y+14, r19	; 0x0e
    10c0:	2d 87       	std	Y+13, r18	; 0x0d
    10c2:	80 16       	cp	r8, r16
    10c4:	91 06       	cpc	r9, r17
    10c6:	2c f0       	brlt	.+10     	; 0x10d2 <vfprintf+0x324>
    10c8:	b7 01       	movw	r22, r14
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    10d0:	d9 cf       	rjmp	.-78     	; 0x1084 <vfprintf+0x2d6>
    10d2:	c8 14       	cp	r12, r8
    10d4:	d9 04       	cpc	r13, r9
    10d6:	41 f4       	brne	.+16     	; 0x10e8 <vfprintf+0x33a>
    10d8:	9a 81       	ldd	r25, Y+2	; 0x02
    10da:	96 33       	cpi	r25, 0x36	; 54
    10dc:	20 f4       	brcc	.+8      	; 0x10e6 <vfprintf+0x338>
    10de:	95 33       	cpi	r25, 0x35	; 53
    10e0:	19 f4       	brne	.+6      	; 0x10e8 <vfprintf+0x33a>
    10e2:	3c 85       	ldd	r19, Y+12	; 0x0c
    10e4:	34 ff       	sbrs	r19, 4
    10e6:	81 e3       	ldi	r24, 0x31	; 49
    10e8:	b7 01       	movw	r22, r14
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	4e c0       	rjmp	.+156    	; 0x118a <vfprintf+0x3dc>
    10ee:	8a 81       	ldd	r24, Y+2	; 0x02
    10f0:	81 33       	cpi	r24, 0x31	; 49
    10f2:	19 f0       	breq	.+6      	; 0x10fa <vfprintf+0x34c>
    10f4:	9c 85       	ldd	r25, Y+12	; 0x0c
    10f6:	9f 7e       	andi	r25, 0xEF	; 239
    10f8:	9c 87       	std	Y+12, r25	; 0x0c
    10fa:	b7 01       	movw	r22, r14
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1102:	11 11       	cpse	r17, r1
    1104:	05 c0       	rjmp	.+10     	; 0x1110 <vfprintf+0x362>
    1106:	94 fc       	sbrc	r9, 4
    1108:	18 c0       	rjmp	.+48     	; 0x113a <vfprintf+0x38c>
    110a:	85 e6       	ldi	r24, 0x65	; 101
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	17 c0       	rjmp	.+46     	; 0x113e <vfprintf+0x390>
    1110:	b7 01       	movw	r22, r14
    1112:	8e e2       	ldi	r24, 0x2E	; 46
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    111a:	1e 5f       	subi	r17, 0xFE	; 254
    111c:	82 e0       	ldi	r24, 0x02	; 2
    111e:	01 e0       	ldi	r16, 0x01	; 1
    1120:	08 0f       	add	r16, r24
    1122:	f3 01       	movw	r30, r6
    1124:	e8 0f       	add	r30, r24
    1126:	f1 1d       	adc	r31, r1
    1128:	80 81       	ld	r24, Z
    112a:	b7 01       	movw	r22, r14
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1132:	80 2f       	mov	r24, r16
    1134:	01 13       	cpse	r16, r17
    1136:	f3 cf       	rjmp	.-26     	; 0x111e <vfprintf+0x370>
    1138:	e6 cf       	rjmp	.-52     	; 0x1106 <vfprintf+0x358>
    113a:	85 e4       	ldi	r24, 0x45	; 69
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	b7 01       	movw	r22, r14
    1140:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1144:	d7 fc       	sbrc	r13, 7
    1146:	06 c0       	rjmp	.+12     	; 0x1154 <vfprintf+0x3a6>
    1148:	c1 14       	cp	r12, r1
    114a:	d1 04       	cpc	r13, r1
    114c:	41 f4       	brne	.+16     	; 0x115e <vfprintf+0x3b0>
    114e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1150:	e4 ff       	sbrs	r30, 4
    1152:	05 c0       	rjmp	.+10     	; 0x115e <vfprintf+0x3b0>
    1154:	d1 94       	neg	r13
    1156:	c1 94       	neg	r12
    1158:	d1 08       	sbc	r13, r1
    115a:	8d e2       	ldi	r24, 0x2D	; 45
    115c:	01 c0       	rjmp	.+2      	; 0x1160 <vfprintf+0x3b2>
    115e:	8b e2       	ldi	r24, 0x2B	; 43
    1160:	b7 01       	movw	r22, r14
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1168:	80 e3       	ldi	r24, 0x30	; 48
    116a:	2a e0       	ldi	r18, 0x0A	; 10
    116c:	c2 16       	cp	r12, r18
    116e:	d1 04       	cpc	r13, r1
    1170:	2c f0       	brlt	.+10     	; 0x117c <vfprintf+0x3ce>
    1172:	8f 5f       	subi	r24, 0xFF	; 255
    1174:	fa e0       	ldi	r31, 0x0A	; 10
    1176:	cf 1a       	sub	r12, r31
    1178:	d1 08       	sbc	r13, r1
    117a:	f7 cf       	rjmp	.-18     	; 0x116a <vfprintf+0x3bc>
    117c:	b7 01       	movw	r22, r14
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1184:	b7 01       	movw	r22, r14
    1186:	c6 01       	movw	r24, r12
    1188:	c0 96       	adiw	r24, 0x30	; 48
    118a:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    118e:	54 c1       	rjmp	.+680    	; 0x1438 <vfprintf+0x68a>
    1190:	83 36       	cpi	r24, 0x63	; 99
    1192:	31 f0       	breq	.+12     	; 0x11a0 <vfprintf+0x3f2>
    1194:	83 37       	cpi	r24, 0x73	; 115
    1196:	79 f0       	breq	.+30     	; 0x11b6 <vfprintf+0x408>
    1198:	83 35       	cpi	r24, 0x53	; 83
    119a:	09 f0       	breq	.+2      	; 0x119e <vfprintf+0x3f0>
    119c:	56 c0       	rjmp	.+172    	; 0x124a <vfprintf+0x49c>
    119e:	20 c0       	rjmp	.+64     	; 0x11e0 <vfprintf+0x432>
    11a0:	56 01       	movw	r10, r12
    11a2:	32 e0       	ldi	r19, 0x02	; 2
    11a4:	a3 0e       	add	r10, r19
    11a6:	b1 1c       	adc	r11, r1
    11a8:	f6 01       	movw	r30, r12
    11aa:	80 81       	ld	r24, Z
    11ac:	89 83       	std	Y+1, r24	; 0x01
    11ae:	01 e0       	ldi	r16, 0x01	; 1
    11b0:	10 e0       	ldi	r17, 0x00	; 0
    11b2:	63 01       	movw	r12, r6
    11b4:	12 c0       	rjmp	.+36     	; 0x11da <vfprintf+0x42c>
    11b6:	56 01       	movw	r10, r12
    11b8:	f2 e0       	ldi	r31, 0x02	; 2
    11ba:	af 0e       	add	r10, r31
    11bc:	b1 1c       	adc	r11, r1
    11be:	f6 01       	movw	r30, r12
    11c0:	c0 80       	ld	r12, Z
    11c2:	d1 80       	ldd	r13, Z+1	; 0x01
    11c4:	96 fe       	sbrs	r9, 6
    11c6:	03 c0       	rjmp	.+6      	; 0x11ce <vfprintf+0x420>
    11c8:	61 2f       	mov	r22, r17
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	02 c0       	rjmp	.+4      	; 0x11d2 <vfprintf+0x424>
    11ce:	6f ef       	ldi	r22, 0xFF	; 255
    11d0:	7f ef       	ldi	r23, 0xFF	; 255
    11d2:	c6 01       	movw	r24, r12
    11d4:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <strnlen>
    11d8:	8c 01       	movw	r16, r24
    11da:	f9 2d       	mov	r31, r9
    11dc:	ff 77       	andi	r31, 0x7F	; 127
    11de:	14 c0       	rjmp	.+40     	; 0x1208 <vfprintf+0x45a>
    11e0:	56 01       	movw	r10, r12
    11e2:	22 e0       	ldi	r18, 0x02	; 2
    11e4:	a2 0e       	add	r10, r18
    11e6:	b1 1c       	adc	r11, r1
    11e8:	f6 01       	movw	r30, r12
    11ea:	c0 80       	ld	r12, Z
    11ec:	d1 80       	ldd	r13, Z+1	; 0x01
    11ee:	96 fe       	sbrs	r9, 6
    11f0:	03 c0       	rjmp	.+6      	; 0x11f8 <vfprintf+0x44a>
    11f2:	61 2f       	mov	r22, r17
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <vfprintf+0x44e>
    11f8:	6f ef       	ldi	r22, 0xFF	; 255
    11fa:	7f ef       	ldi	r23, 0xFF	; 255
    11fc:	c6 01       	movw	r24, r12
    11fe:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <strnlen_P>
    1202:	8c 01       	movw	r16, r24
    1204:	f9 2d       	mov	r31, r9
    1206:	f0 68       	ori	r31, 0x80	; 128
    1208:	9f 2e       	mov	r9, r31
    120a:	f3 fd       	sbrc	r31, 3
    120c:	1a c0       	rjmp	.+52     	; 0x1242 <vfprintf+0x494>
    120e:	85 2d       	mov	r24, r5
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	08 17       	cp	r16, r24
    1214:	19 07       	cpc	r17, r25
    1216:	a8 f4       	brcc	.+42     	; 0x1242 <vfprintf+0x494>
    1218:	b7 01       	movw	r22, r14
    121a:	80 e2       	ldi	r24, 0x20	; 32
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1222:	5a 94       	dec	r5
    1224:	f4 cf       	rjmp	.-24     	; 0x120e <vfprintf+0x460>
    1226:	f6 01       	movw	r30, r12
    1228:	97 fc       	sbrc	r9, 7
    122a:	85 91       	lpm	r24, Z+
    122c:	97 fe       	sbrs	r9, 7
    122e:	81 91       	ld	r24, Z+
    1230:	6f 01       	movw	r12, r30
    1232:	b7 01       	movw	r22, r14
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    123a:	51 10       	cpse	r5, r1
    123c:	5a 94       	dec	r5
    123e:	01 50       	subi	r16, 0x01	; 1
    1240:	11 09       	sbc	r17, r1
    1242:	01 15       	cp	r16, r1
    1244:	11 05       	cpc	r17, r1
    1246:	79 f7       	brne	.-34     	; 0x1226 <vfprintf+0x478>
    1248:	f7 c0       	rjmp	.+494    	; 0x1438 <vfprintf+0x68a>
    124a:	84 36       	cpi	r24, 0x64	; 100
    124c:	11 f0       	breq	.+4      	; 0x1252 <vfprintf+0x4a4>
    124e:	89 36       	cpi	r24, 0x69	; 105
    1250:	61 f5       	brne	.+88     	; 0x12aa <vfprintf+0x4fc>
    1252:	56 01       	movw	r10, r12
    1254:	97 fe       	sbrs	r9, 7
    1256:	09 c0       	rjmp	.+18     	; 0x126a <vfprintf+0x4bc>
    1258:	24 e0       	ldi	r18, 0x04	; 4
    125a:	a2 0e       	add	r10, r18
    125c:	b1 1c       	adc	r11, r1
    125e:	f6 01       	movw	r30, r12
    1260:	60 81       	ld	r22, Z
    1262:	71 81       	ldd	r23, Z+1	; 0x01
    1264:	82 81       	ldd	r24, Z+2	; 0x02
    1266:	93 81       	ldd	r25, Z+3	; 0x03
    1268:	0a c0       	rjmp	.+20     	; 0x127e <vfprintf+0x4d0>
    126a:	f2 e0       	ldi	r31, 0x02	; 2
    126c:	af 0e       	add	r10, r31
    126e:	b1 1c       	adc	r11, r1
    1270:	f6 01       	movw	r30, r12
    1272:	60 81       	ld	r22, Z
    1274:	71 81       	ldd	r23, Z+1	; 0x01
    1276:	07 2e       	mov	r0, r23
    1278:	00 0c       	add	r0, r0
    127a:	88 0b       	sbc	r24, r24
    127c:	99 0b       	sbc	r25, r25
    127e:	f9 2d       	mov	r31, r9
    1280:	ff 76       	andi	r31, 0x6F	; 111
    1282:	9f 2e       	mov	r9, r31
    1284:	97 ff       	sbrs	r25, 7
    1286:	09 c0       	rjmp	.+18     	; 0x129a <vfprintf+0x4ec>
    1288:	90 95       	com	r25
    128a:	80 95       	com	r24
    128c:	70 95       	com	r23
    128e:	61 95       	neg	r22
    1290:	7f 4f       	sbci	r23, 0xFF	; 255
    1292:	8f 4f       	sbci	r24, 0xFF	; 255
    1294:	9f 4f       	sbci	r25, 0xFF	; 255
    1296:	f0 68       	ori	r31, 0x80	; 128
    1298:	9f 2e       	mov	r9, r31
    129a:	2a e0       	ldi	r18, 0x0A	; 10
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	a3 01       	movw	r20, r6
    12a0:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__ultoa_invert>
    12a4:	c8 2e       	mov	r12, r24
    12a6:	c6 18       	sub	r12, r6
    12a8:	3f c0       	rjmp	.+126    	; 0x1328 <vfprintf+0x57a>
    12aa:	09 2d       	mov	r16, r9
    12ac:	85 37       	cpi	r24, 0x75	; 117
    12ae:	21 f4       	brne	.+8      	; 0x12b8 <vfprintf+0x50a>
    12b0:	0f 7e       	andi	r16, 0xEF	; 239
    12b2:	2a e0       	ldi	r18, 0x0A	; 10
    12b4:	30 e0       	ldi	r19, 0x00	; 0
    12b6:	1d c0       	rjmp	.+58     	; 0x12f2 <vfprintf+0x544>
    12b8:	09 7f       	andi	r16, 0xF9	; 249
    12ba:	8f 36       	cpi	r24, 0x6F	; 111
    12bc:	91 f0       	breq	.+36     	; 0x12e2 <vfprintf+0x534>
    12be:	18 f4       	brcc	.+6      	; 0x12c6 <vfprintf+0x518>
    12c0:	88 35       	cpi	r24, 0x58	; 88
    12c2:	59 f0       	breq	.+22     	; 0x12da <vfprintf+0x52c>
    12c4:	c3 c0       	rjmp	.+390    	; 0x144c <vfprintf+0x69e>
    12c6:	80 37       	cpi	r24, 0x70	; 112
    12c8:	19 f0       	breq	.+6      	; 0x12d0 <vfprintf+0x522>
    12ca:	88 37       	cpi	r24, 0x78	; 120
    12cc:	11 f0       	breq	.+4      	; 0x12d2 <vfprintf+0x524>
    12ce:	be c0       	rjmp	.+380    	; 0x144c <vfprintf+0x69e>
    12d0:	00 61       	ori	r16, 0x10	; 16
    12d2:	04 ff       	sbrs	r16, 4
    12d4:	09 c0       	rjmp	.+18     	; 0x12e8 <vfprintf+0x53a>
    12d6:	04 60       	ori	r16, 0x04	; 4
    12d8:	07 c0       	rjmp	.+14     	; 0x12e8 <vfprintf+0x53a>
    12da:	94 fe       	sbrs	r9, 4
    12dc:	08 c0       	rjmp	.+16     	; 0x12ee <vfprintf+0x540>
    12de:	06 60       	ori	r16, 0x06	; 6
    12e0:	06 c0       	rjmp	.+12     	; 0x12ee <vfprintf+0x540>
    12e2:	28 e0       	ldi	r18, 0x08	; 8
    12e4:	30 e0       	ldi	r19, 0x00	; 0
    12e6:	05 c0       	rjmp	.+10     	; 0x12f2 <vfprintf+0x544>
    12e8:	20 e1       	ldi	r18, 0x10	; 16
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <vfprintf+0x544>
    12ee:	20 e1       	ldi	r18, 0x10	; 16
    12f0:	32 e0       	ldi	r19, 0x02	; 2
    12f2:	56 01       	movw	r10, r12
    12f4:	07 ff       	sbrs	r16, 7
    12f6:	09 c0       	rjmp	.+18     	; 0x130a <vfprintf+0x55c>
    12f8:	84 e0       	ldi	r24, 0x04	; 4
    12fa:	a8 0e       	add	r10, r24
    12fc:	b1 1c       	adc	r11, r1
    12fe:	f6 01       	movw	r30, r12
    1300:	60 81       	ld	r22, Z
    1302:	71 81       	ldd	r23, Z+1	; 0x01
    1304:	82 81       	ldd	r24, Z+2	; 0x02
    1306:	93 81       	ldd	r25, Z+3	; 0x03
    1308:	08 c0       	rjmp	.+16     	; 0x131a <vfprintf+0x56c>
    130a:	f2 e0       	ldi	r31, 0x02	; 2
    130c:	af 0e       	add	r10, r31
    130e:	b1 1c       	adc	r11, r1
    1310:	f6 01       	movw	r30, r12
    1312:	60 81       	ld	r22, Z
    1314:	71 81       	ldd	r23, Z+1	; 0x01
    1316:	80 e0       	ldi	r24, 0x00	; 0
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	a3 01       	movw	r20, r6
    131c:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__ultoa_invert>
    1320:	c8 2e       	mov	r12, r24
    1322:	c6 18       	sub	r12, r6
    1324:	0f 77       	andi	r16, 0x7F	; 127
    1326:	90 2e       	mov	r9, r16
    1328:	96 fe       	sbrs	r9, 6
    132a:	0b c0       	rjmp	.+22     	; 0x1342 <vfprintf+0x594>
    132c:	09 2d       	mov	r16, r9
    132e:	0e 7f       	andi	r16, 0xFE	; 254
    1330:	c1 16       	cp	r12, r17
    1332:	50 f4       	brcc	.+20     	; 0x1348 <vfprintf+0x59a>
    1334:	94 fe       	sbrs	r9, 4
    1336:	0a c0       	rjmp	.+20     	; 0x134c <vfprintf+0x59e>
    1338:	92 fc       	sbrc	r9, 2
    133a:	08 c0       	rjmp	.+16     	; 0x134c <vfprintf+0x59e>
    133c:	09 2d       	mov	r16, r9
    133e:	0e 7e       	andi	r16, 0xEE	; 238
    1340:	05 c0       	rjmp	.+10     	; 0x134c <vfprintf+0x59e>
    1342:	dc 2c       	mov	r13, r12
    1344:	09 2d       	mov	r16, r9
    1346:	03 c0       	rjmp	.+6      	; 0x134e <vfprintf+0x5a0>
    1348:	dc 2c       	mov	r13, r12
    134a:	01 c0       	rjmp	.+2      	; 0x134e <vfprintf+0x5a0>
    134c:	d1 2e       	mov	r13, r17
    134e:	04 ff       	sbrs	r16, 4
    1350:	0d c0       	rjmp	.+26     	; 0x136c <vfprintf+0x5be>
    1352:	fe 01       	movw	r30, r28
    1354:	ec 0d       	add	r30, r12
    1356:	f1 1d       	adc	r31, r1
    1358:	80 81       	ld	r24, Z
    135a:	80 33       	cpi	r24, 0x30	; 48
    135c:	11 f4       	brne	.+4      	; 0x1362 <vfprintf+0x5b4>
    135e:	09 7e       	andi	r16, 0xE9	; 233
    1360:	09 c0       	rjmp	.+18     	; 0x1374 <vfprintf+0x5c6>
    1362:	02 ff       	sbrs	r16, 2
    1364:	06 c0       	rjmp	.+12     	; 0x1372 <vfprintf+0x5c4>
    1366:	d3 94       	inc	r13
    1368:	d3 94       	inc	r13
    136a:	04 c0       	rjmp	.+8      	; 0x1374 <vfprintf+0x5c6>
    136c:	80 2f       	mov	r24, r16
    136e:	86 78       	andi	r24, 0x86	; 134
    1370:	09 f0       	breq	.+2      	; 0x1374 <vfprintf+0x5c6>
    1372:	d3 94       	inc	r13
    1374:	03 fd       	sbrc	r16, 3
    1376:	11 c0       	rjmp	.+34     	; 0x139a <vfprintf+0x5ec>
    1378:	00 ff       	sbrs	r16, 0
    137a:	06 c0       	rjmp	.+12     	; 0x1388 <vfprintf+0x5da>
    137c:	1c 2d       	mov	r17, r12
    137e:	d5 14       	cp	r13, r5
    1380:	80 f4       	brcc	.+32     	; 0x13a2 <vfprintf+0x5f4>
    1382:	15 0d       	add	r17, r5
    1384:	1d 19       	sub	r17, r13
    1386:	0d c0       	rjmp	.+26     	; 0x13a2 <vfprintf+0x5f4>
    1388:	d5 14       	cp	r13, r5
    138a:	58 f4       	brcc	.+22     	; 0x13a2 <vfprintf+0x5f4>
    138c:	b7 01       	movw	r22, r14
    138e:	80 e2       	ldi	r24, 0x20	; 32
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1396:	d3 94       	inc	r13
    1398:	f7 cf       	rjmp	.-18     	; 0x1388 <vfprintf+0x5da>
    139a:	d5 14       	cp	r13, r5
    139c:	10 f4       	brcc	.+4      	; 0x13a2 <vfprintf+0x5f4>
    139e:	5d 18       	sub	r5, r13
    13a0:	01 c0       	rjmp	.+2      	; 0x13a4 <vfprintf+0x5f6>
    13a2:	51 2c       	mov	r5, r1
    13a4:	04 ff       	sbrs	r16, 4
    13a6:	10 c0       	rjmp	.+32     	; 0x13c8 <vfprintf+0x61a>
    13a8:	b7 01       	movw	r22, r14
    13aa:	80 e3       	ldi	r24, 0x30	; 48
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    13b2:	02 ff       	sbrs	r16, 2
    13b4:	17 c0       	rjmp	.+46     	; 0x13e4 <vfprintf+0x636>
    13b6:	01 fd       	sbrc	r16, 1
    13b8:	03 c0       	rjmp	.+6      	; 0x13c0 <vfprintf+0x612>
    13ba:	88 e7       	ldi	r24, 0x78	; 120
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <vfprintf+0x616>
    13c0:	88 e5       	ldi	r24, 0x58	; 88
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	b7 01       	movw	r22, r14
    13c6:	0c c0       	rjmp	.+24     	; 0x13e0 <vfprintf+0x632>
    13c8:	80 2f       	mov	r24, r16
    13ca:	86 78       	andi	r24, 0x86	; 134
    13cc:	59 f0       	breq	.+22     	; 0x13e4 <vfprintf+0x636>
    13ce:	01 ff       	sbrs	r16, 1
    13d0:	02 c0       	rjmp	.+4      	; 0x13d6 <vfprintf+0x628>
    13d2:	8b e2       	ldi	r24, 0x2B	; 43
    13d4:	01 c0       	rjmp	.+2      	; 0x13d8 <vfprintf+0x62a>
    13d6:	80 e2       	ldi	r24, 0x20	; 32
    13d8:	07 fd       	sbrc	r16, 7
    13da:	8d e2       	ldi	r24, 0x2D	; 45
    13dc:	b7 01       	movw	r22, r14
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    13e4:	c1 16       	cp	r12, r17
    13e6:	38 f4       	brcc	.+14     	; 0x13f6 <vfprintf+0x648>
    13e8:	b7 01       	movw	r22, r14
    13ea:	80 e3       	ldi	r24, 0x30	; 48
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    13f2:	11 50       	subi	r17, 0x01	; 1
    13f4:	f7 cf       	rjmp	.-18     	; 0x13e4 <vfprintf+0x636>
    13f6:	ca 94       	dec	r12
    13f8:	f3 01       	movw	r30, r6
    13fa:	ec 0d       	add	r30, r12
    13fc:	f1 1d       	adc	r31, r1
    13fe:	80 81       	ld	r24, Z
    1400:	b7 01       	movw	r22, r14
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1408:	c1 10       	cpse	r12, r1
    140a:	f5 cf       	rjmp	.-22     	; 0x13f6 <vfprintf+0x648>
    140c:	15 c0       	rjmp	.+42     	; 0x1438 <vfprintf+0x68a>
    140e:	f4 e0       	ldi	r31, 0x04	; 4
    1410:	f5 15       	cp	r31, r5
    1412:	60 f5       	brcc	.+88     	; 0x146c <vfprintf+0x6be>
    1414:	84 e0       	ldi	r24, 0x04	; 4
    1416:	58 1a       	sub	r5, r24
    1418:	93 fe       	sbrs	r9, 3
    141a:	1f c0       	rjmp	.+62     	; 0x145a <vfprintf+0x6ac>
    141c:	01 11       	cpse	r16, r1
    141e:	27 c0       	rjmp	.+78     	; 0x146e <vfprintf+0x6c0>
    1420:	2c 85       	ldd	r18, Y+12	; 0x0c
    1422:	23 ff       	sbrs	r18, 3
    1424:	2a c0       	rjmp	.+84     	; 0x147a <vfprintf+0x6cc>
    1426:	04 e5       	ldi	r16, 0x54	; 84
    1428:	10 e0       	ldi	r17, 0x00	; 0
    142a:	39 2d       	mov	r19, r9
    142c:	30 71       	andi	r19, 0x10	; 16
    142e:	93 2e       	mov	r9, r19
    1430:	f8 01       	movw	r30, r16
    1432:	84 91       	lpm	r24, Z
    1434:	81 11       	cpse	r24, r1
    1436:	24 c0       	rjmp	.+72     	; 0x1480 <vfprintf+0x6d2>
    1438:	55 20       	and	r5, r5
    143a:	09 f4       	brne	.+2      	; 0x143e <vfprintf+0x690>
    143c:	e4 cc       	rjmp	.-1592   	; 0xe06 <vfprintf+0x58>
    143e:	b7 01       	movw	r22, r14
    1440:	80 e2       	ldi	r24, 0x20	; 32
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1448:	5a 94       	dec	r5
    144a:	f6 cf       	rjmp	.-20     	; 0x1438 <vfprintf+0x68a>
    144c:	f7 01       	movw	r30, r14
    144e:	86 81       	ldd	r24, Z+6	; 0x06
    1450:	97 81       	ldd	r25, Z+7	; 0x07
    1452:	26 c0       	rjmp	.+76     	; 0x14a0 <vfprintf+0x6f2>
    1454:	8f ef       	ldi	r24, 0xFF	; 255
    1456:	9f ef       	ldi	r25, 0xFF	; 255
    1458:	23 c0       	rjmp	.+70     	; 0x14a0 <vfprintf+0x6f2>
    145a:	b7 01       	movw	r22, r14
    145c:	80 e2       	ldi	r24, 0x20	; 32
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1464:	5a 94       	dec	r5
    1466:	51 10       	cpse	r5, r1
    1468:	f8 cf       	rjmp	.-16     	; 0x145a <vfprintf+0x6ac>
    146a:	d8 cf       	rjmp	.-80     	; 0x141c <vfprintf+0x66e>
    146c:	51 2c       	mov	r5, r1
    146e:	b7 01       	movw	r22, r14
    1470:	80 2f       	mov	r24, r16
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    1478:	d3 cf       	rjmp	.-90     	; 0x1420 <vfprintf+0x672>
    147a:	08 e5       	ldi	r16, 0x58	; 88
    147c:	10 e0       	ldi	r17, 0x00	; 0
    147e:	d5 cf       	rjmp	.-86     	; 0x142a <vfprintf+0x67c>
    1480:	91 10       	cpse	r9, r1
    1482:	80 52       	subi	r24, 0x20	; 32
    1484:	b7 01       	movw	r22, r14
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <fputc>
    148c:	0f 5f       	subi	r16, 0xFF	; 255
    148e:	1f 4f       	sbci	r17, 0xFF	; 255
    1490:	cf cf       	rjmp	.-98     	; 0x1430 <vfprintf+0x682>
    1492:	23 e0       	ldi	r18, 0x03	; 3
    1494:	25 15       	cp	r18, r5
    1496:	10 f4       	brcc	.+4      	; 0x149c <vfprintf+0x6ee>
    1498:	83 e0       	ldi	r24, 0x03	; 3
    149a:	bd cf       	rjmp	.-134    	; 0x1416 <vfprintf+0x668>
    149c:	51 2c       	mov	r5, r1
    149e:	c0 cf       	rjmp	.-128    	; 0x1420 <vfprintf+0x672>
    14a0:	60 96       	adiw	r28, 0x10	; 16
    14a2:	e2 e1       	ldi	r30, 0x12	; 18
    14a4:	0c 94 70 0a 	jmp	0x14e0	; 0x14e0 <__epilogue_restores__>

000014a8 <__prologue_saves__>:
    14a8:	2f 92       	push	r2
    14aa:	3f 92       	push	r3
    14ac:	4f 92       	push	r4
    14ae:	5f 92       	push	r5
    14b0:	6f 92       	push	r6
    14b2:	7f 92       	push	r7
    14b4:	8f 92       	push	r8
    14b6:	9f 92       	push	r9
    14b8:	af 92       	push	r10
    14ba:	bf 92       	push	r11
    14bc:	cf 92       	push	r12
    14be:	df 92       	push	r13
    14c0:	ef 92       	push	r14
    14c2:	ff 92       	push	r15
    14c4:	0f 93       	push	r16
    14c6:	1f 93       	push	r17
    14c8:	cf 93       	push	r28
    14ca:	df 93       	push	r29
    14cc:	cd b7       	in	r28, 0x3d	; 61
    14ce:	de b7       	in	r29, 0x3e	; 62
    14d0:	ca 1b       	sub	r28, r26
    14d2:	db 0b       	sbc	r29, r27
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	f8 94       	cli
    14d8:	de bf       	out	0x3e, r29	; 62
    14da:	0f be       	out	0x3f, r0	; 63
    14dc:	cd bf       	out	0x3d, r28	; 61
    14de:	09 94       	ijmp

000014e0 <__epilogue_restores__>:
    14e0:	2a 88       	ldd	r2, Y+18	; 0x12
    14e2:	39 88       	ldd	r3, Y+17	; 0x11
    14e4:	48 88       	ldd	r4, Y+16	; 0x10
    14e6:	5f 84       	ldd	r5, Y+15	; 0x0f
    14e8:	6e 84       	ldd	r6, Y+14	; 0x0e
    14ea:	7d 84       	ldd	r7, Y+13	; 0x0d
    14ec:	8c 84       	ldd	r8, Y+12	; 0x0c
    14ee:	9b 84       	ldd	r9, Y+11	; 0x0b
    14f0:	aa 84       	ldd	r10, Y+10	; 0x0a
    14f2:	b9 84       	ldd	r11, Y+9	; 0x09
    14f4:	c8 84       	ldd	r12, Y+8	; 0x08
    14f6:	df 80       	ldd	r13, Y+7	; 0x07
    14f8:	ee 80       	ldd	r14, Y+6	; 0x06
    14fa:	fd 80       	ldd	r15, Y+5	; 0x05
    14fc:	0c 81       	ldd	r16, Y+4	; 0x04
    14fe:	1b 81       	ldd	r17, Y+3	; 0x03
    1500:	aa 81       	ldd	r26, Y+2	; 0x02
    1502:	b9 81       	ldd	r27, Y+1	; 0x01
    1504:	ce 0f       	add	r28, r30
    1506:	d1 1d       	adc	r29, r1
    1508:	0f b6       	in	r0, 0x3f	; 63
    150a:	f8 94       	cli
    150c:	de bf       	out	0x3e, r29	; 62
    150e:	0f be       	out	0x3f, r0	; 63
    1510:	cd bf       	out	0x3d, r28	; 61
    1512:	ed 01       	movw	r28, r26
    1514:	08 95       	ret

00001516 <__ftoa_engine>:
    1516:	28 30       	cpi	r18, 0x08	; 8
    1518:	08 f0       	brcs	.+2      	; 0x151c <__ftoa_engine+0x6>
    151a:	27 e0       	ldi	r18, 0x07	; 7
    151c:	33 27       	eor	r19, r19
    151e:	da 01       	movw	r26, r20
    1520:	99 0f       	add	r25, r25
    1522:	31 1d       	adc	r19, r1
    1524:	87 fd       	sbrc	r24, 7
    1526:	91 60       	ori	r25, 0x01	; 1
    1528:	00 96       	adiw	r24, 0x00	; 0
    152a:	61 05       	cpc	r22, r1
    152c:	71 05       	cpc	r23, r1
    152e:	39 f4       	brne	.+14     	; 0x153e <__ftoa_engine+0x28>
    1530:	32 60       	ori	r19, 0x02	; 2
    1532:	2e 5f       	subi	r18, 0xFE	; 254
    1534:	3d 93       	st	X+, r19
    1536:	30 e3       	ldi	r19, 0x30	; 48
    1538:	2a 95       	dec	r18
    153a:	e1 f7       	brne	.-8      	; 0x1534 <__ftoa_engine+0x1e>
    153c:	08 95       	ret
    153e:	9f 3f       	cpi	r25, 0xFF	; 255
    1540:	30 f0       	brcs	.+12     	; 0x154e <__ftoa_engine+0x38>
    1542:	80 38       	cpi	r24, 0x80	; 128
    1544:	71 05       	cpc	r23, r1
    1546:	61 05       	cpc	r22, r1
    1548:	09 f0       	breq	.+2      	; 0x154c <__ftoa_engine+0x36>
    154a:	3c 5f       	subi	r19, 0xFC	; 252
    154c:	3c 5f       	subi	r19, 0xFC	; 252
    154e:	3d 93       	st	X+, r19
    1550:	91 30       	cpi	r25, 0x01	; 1
    1552:	08 f0       	brcs	.+2      	; 0x1556 <__ftoa_engine+0x40>
    1554:	80 68       	ori	r24, 0x80	; 128
    1556:	91 1d       	adc	r25, r1
    1558:	df 93       	push	r29
    155a:	cf 93       	push	r28
    155c:	1f 93       	push	r17
    155e:	0f 93       	push	r16
    1560:	ff 92       	push	r15
    1562:	ef 92       	push	r14
    1564:	19 2f       	mov	r17, r25
    1566:	98 7f       	andi	r25, 0xF8	; 248
    1568:	96 95       	lsr	r25
    156a:	e9 2f       	mov	r30, r25
    156c:	96 95       	lsr	r25
    156e:	96 95       	lsr	r25
    1570:	e9 0f       	add	r30, r25
    1572:	ff 27       	eor	r31, r31
    1574:	ea 54       	subi	r30, 0x4A	; 74
    1576:	ff 4f       	sbci	r31, 0xFF	; 255
    1578:	99 27       	eor	r25, r25
    157a:	33 27       	eor	r19, r19
    157c:	ee 24       	eor	r14, r14
    157e:	ff 24       	eor	r15, r15
    1580:	a7 01       	movw	r20, r14
    1582:	e7 01       	movw	r28, r14
    1584:	05 90       	lpm	r0, Z+
    1586:	08 94       	sec
    1588:	07 94       	ror	r0
    158a:	28 f4       	brcc	.+10     	; 0x1596 <__ftoa_engine+0x80>
    158c:	36 0f       	add	r19, r22
    158e:	e7 1e       	adc	r14, r23
    1590:	f8 1e       	adc	r15, r24
    1592:	49 1f       	adc	r20, r25
    1594:	51 1d       	adc	r21, r1
    1596:	66 0f       	add	r22, r22
    1598:	77 1f       	adc	r23, r23
    159a:	88 1f       	adc	r24, r24
    159c:	99 1f       	adc	r25, r25
    159e:	06 94       	lsr	r0
    15a0:	a1 f7       	brne	.-24     	; 0x158a <__ftoa_engine+0x74>
    15a2:	05 90       	lpm	r0, Z+
    15a4:	07 94       	ror	r0
    15a6:	28 f4       	brcc	.+10     	; 0x15b2 <__ftoa_engine+0x9c>
    15a8:	e7 0e       	add	r14, r23
    15aa:	f8 1e       	adc	r15, r24
    15ac:	49 1f       	adc	r20, r25
    15ae:	56 1f       	adc	r21, r22
    15b0:	c1 1d       	adc	r28, r1
    15b2:	77 0f       	add	r23, r23
    15b4:	88 1f       	adc	r24, r24
    15b6:	99 1f       	adc	r25, r25
    15b8:	66 1f       	adc	r22, r22
    15ba:	06 94       	lsr	r0
    15bc:	a1 f7       	brne	.-24     	; 0x15a6 <__ftoa_engine+0x90>
    15be:	05 90       	lpm	r0, Z+
    15c0:	07 94       	ror	r0
    15c2:	28 f4       	brcc	.+10     	; 0x15ce <__ftoa_engine+0xb8>
    15c4:	f8 0e       	add	r15, r24
    15c6:	49 1f       	adc	r20, r25
    15c8:	56 1f       	adc	r21, r22
    15ca:	c7 1f       	adc	r28, r23
    15cc:	d1 1d       	adc	r29, r1
    15ce:	88 0f       	add	r24, r24
    15d0:	99 1f       	adc	r25, r25
    15d2:	66 1f       	adc	r22, r22
    15d4:	77 1f       	adc	r23, r23
    15d6:	06 94       	lsr	r0
    15d8:	a1 f7       	brne	.-24     	; 0x15c2 <__ftoa_engine+0xac>
    15da:	05 90       	lpm	r0, Z+
    15dc:	07 94       	ror	r0
    15de:	20 f4       	brcc	.+8      	; 0x15e8 <__ftoa_engine+0xd2>
    15e0:	49 0f       	add	r20, r25
    15e2:	56 1f       	adc	r21, r22
    15e4:	c7 1f       	adc	r28, r23
    15e6:	d8 1f       	adc	r29, r24
    15e8:	99 0f       	add	r25, r25
    15ea:	66 1f       	adc	r22, r22
    15ec:	77 1f       	adc	r23, r23
    15ee:	88 1f       	adc	r24, r24
    15f0:	06 94       	lsr	r0
    15f2:	a9 f7       	brne	.-22     	; 0x15de <__ftoa_engine+0xc8>
    15f4:	84 91       	lpm	r24, Z
    15f6:	10 95       	com	r17
    15f8:	17 70       	andi	r17, 0x07	; 7
    15fa:	41 f0       	breq	.+16     	; 0x160c <__ftoa_engine+0xf6>
    15fc:	d6 95       	lsr	r29
    15fe:	c7 95       	ror	r28
    1600:	57 95       	ror	r21
    1602:	47 95       	ror	r20
    1604:	f7 94       	ror	r15
    1606:	e7 94       	ror	r14
    1608:	1a 95       	dec	r17
    160a:	c1 f7       	brne	.-16     	; 0x15fc <__ftoa_engine+0xe6>
    160c:	ec e5       	ldi	r30, 0x5C	; 92
    160e:	f0 e0       	ldi	r31, 0x00	; 0
    1610:	68 94       	set
    1612:	15 90       	lpm	r1, Z+
    1614:	15 91       	lpm	r17, Z+
    1616:	35 91       	lpm	r19, Z+
    1618:	65 91       	lpm	r22, Z+
    161a:	95 91       	lpm	r25, Z+
    161c:	05 90       	lpm	r0, Z+
    161e:	7f e2       	ldi	r23, 0x2F	; 47
    1620:	73 95       	inc	r23
    1622:	e1 18       	sub	r14, r1
    1624:	f1 0a       	sbc	r15, r17
    1626:	43 0b       	sbc	r20, r19
    1628:	56 0b       	sbc	r21, r22
    162a:	c9 0b       	sbc	r28, r25
    162c:	d0 09       	sbc	r29, r0
    162e:	c0 f7       	brcc	.-16     	; 0x1620 <__ftoa_engine+0x10a>
    1630:	e1 0c       	add	r14, r1
    1632:	f1 1e       	adc	r15, r17
    1634:	43 1f       	adc	r20, r19
    1636:	56 1f       	adc	r21, r22
    1638:	c9 1f       	adc	r28, r25
    163a:	d0 1d       	adc	r29, r0
    163c:	7e f4       	brtc	.+30     	; 0x165c <__ftoa_engine+0x146>
    163e:	70 33       	cpi	r23, 0x30	; 48
    1640:	11 f4       	brne	.+4      	; 0x1646 <__ftoa_engine+0x130>
    1642:	8a 95       	dec	r24
    1644:	e6 cf       	rjmp	.-52     	; 0x1612 <__ftoa_engine+0xfc>
    1646:	e8 94       	clt
    1648:	01 50       	subi	r16, 0x01	; 1
    164a:	30 f0       	brcs	.+12     	; 0x1658 <__ftoa_engine+0x142>
    164c:	08 0f       	add	r16, r24
    164e:	0a f4       	brpl	.+2      	; 0x1652 <__ftoa_engine+0x13c>
    1650:	00 27       	eor	r16, r16
    1652:	02 17       	cp	r16, r18
    1654:	08 f4       	brcc	.+2      	; 0x1658 <__ftoa_engine+0x142>
    1656:	20 2f       	mov	r18, r16
    1658:	23 95       	inc	r18
    165a:	02 2f       	mov	r16, r18
    165c:	7a 33       	cpi	r23, 0x3A	; 58
    165e:	28 f0       	brcs	.+10     	; 0x166a <__ftoa_engine+0x154>
    1660:	79 e3       	ldi	r23, 0x39	; 57
    1662:	7d 93       	st	X+, r23
    1664:	2a 95       	dec	r18
    1666:	e9 f7       	brne	.-6      	; 0x1662 <__ftoa_engine+0x14c>
    1668:	10 c0       	rjmp	.+32     	; 0x168a <__ftoa_engine+0x174>
    166a:	7d 93       	st	X+, r23
    166c:	2a 95       	dec	r18
    166e:	89 f6       	brne	.-94     	; 0x1612 <__ftoa_engine+0xfc>
    1670:	06 94       	lsr	r0
    1672:	97 95       	ror	r25
    1674:	67 95       	ror	r22
    1676:	37 95       	ror	r19
    1678:	17 95       	ror	r17
    167a:	17 94       	ror	r1
    167c:	e1 18       	sub	r14, r1
    167e:	f1 0a       	sbc	r15, r17
    1680:	43 0b       	sbc	r20, r19
    1682:	56 0b       	sbc	r21, r22
    1684:	c9 0b       	sbc	r28, r25
    1686:	d0 09       	sbc	r29, r0
    1688:	98 f0       	brcs	.+38     	; 0x16b0 <__ftoa_engine+0x19a>
    168a:	23 95       	inc	r18
    168c:	7e 91       	ld	r23, -X
    168e:	73 95       	inc	r23
    1690:	7a 33       	cpi	r23, 0x3A	; 58
    1692:	08 f0       	brcs	.+2      	; 0x1696 <__ftoa_engine+0x180>
    1694:	70 e3       	ldi	r23, 0x30	; 48
    1696:	7c 93       	st	X, r23
    1698:	20 13       	cpse	r18, r16
    169a:	b8 f7       	brcc	.-18     	; 0x168a <__ftoa_engine+0x174>
    169c:	7e 91       	ld	r23, -X
    169e:	70 61       	ori	r23, 0x10	; 16
    16a0:	7d 93       	st	X+, r23
    16a2:	30 f0       	brcs	.+12     	; 0x16b0 <__ftoa_engine+0x19a>
    16a4:	83 95       	inc	r24
    16a6:	71 e3       	ldi	r23, 0x31	; 49
    16a8:	7d 93       	st	X+, r23
    16aa:	70 e3       	ldi	r23, 0x30	; 48
    16ac:	2a 95       	dec	r18
    16ae:	e1 f7       	brne	.-8      	; 0x16a8 <__ftoa_engine+0x192>
    16b0:	11 24       	eor	r1, r1
    16b2:	ef 90       	pop	r14
    16b4:	ff 90       	pop	r15
    16b6:	0f 91       	pop	r16
    16b8:	1f 91       	pop	r17
    16ba:	cf 91       	pop	r28
    16bc:	df 91       	pop	r29
    16be:	99 27       	eor	r25, r25
    16c0:	87 fd       	sbrc	r24, 7
    16c2:	90 95       	com	r25
    16c4:	08 95       	ret

000016c6 <strnlen_P>:
    16c6:	fc 01       	movw	r30, r24
    16c8:	05 90       	lpm	r0, Z+
    16ca:	61 50       	subi	r22, 0x01	; 1
    16cc:	70 40       	sbci	r23, 0x00	; 0
    16ce:	01 10       	cpse	r0, r1
    16d0:	d8 f7       	brcc	.-10     	; 0x16c8 <strnlen_P+0x2>
    16d2:	80 95       	com	r24
    16d4:	90 95       	com	r25
    16d6:	8e 0f       	add	r24, r30
    16d8:	9f 1f       	adc	r25, r31
    16da:	08 95       	ret

000016dc <strnlen>:
    16dc:	fc 01       	movw	r30, r24
    16de:	61 50       	subi	r22, 0x01	; 1
    16e0:	70 40       	sbci	r23, 0x00	; 0
    16e2:	01 90       	ld	r0, Z+
    16e4:	01 10       	cpse	r0, r1
    16e6:	d8 f7       	brcc	.-10     	; 0x16de <strnlen+0x2>
    16e8:	80 95       	com	r24
    16ea:	90 95       	com	r25
    16ec:	8e 0f       	add	r24, r30
    16ee:	9f 1f       	adc	r25, r31
    16f0:	08 95       	ret

000016f2 <fputc>:
    16f2:	0f 93       	push	r16
    16f4:	1f 93       	push	r17
    16f6:	cf 93       	push	r28
    16f8:	df 93       	push	r29
    16fa:	fb 01       	movw	r30, r22
    16fc:	23 81       	ldd	r18, Z+3	; 0x03
    16fe:	21 fd       	sbrc	r18, 1
    1700:	03 c0       	rjmp	.+6      	; 0x1708 <fputc+0x16>
    1702:	8f ef       	ldi	r24, 0xFF	; 255
    1704:	9f ef       	ldi	r25, 0xFF	; 255
    1706:	2c c0       	rjmp	.+88     	; 0x1760 <fputc+0x6e>
    1708:	22 ff       	sbrs	r18, 2
    170a:	16 c0       	rjmp	.+44     	; 0x1738 <fputc+0x46>
    170c:	46 81       	ldd	r20, Z+6	; 0x06
    170e:	57 81       	ldd	r21, Z+7	; 0x07
    1710:	24 81       	ldd	r18, Z+4	; 0x04
    1712:	35 81       	ldd	r19, Z+5	; 0x05
    1714:	42 17       	cp	r20, r18
    1716:	53 07       	cpc	r21, r19
    1718:	44 f4       	brge	.+16     	; 0x172a <fputc+0x38>
    171a:	a0 81       	ld	r26, Z
    171c:	b1 81       	ldd	r27, Z+1	; 0x01
    171e:	9d 01       	movw	r18, r26
    1720:	2f 5f       	subi	r18, 0xFF	; 255
    1722:	3f 4f       	sbci	r19, 0xFF	; 255
    1724:	31 83       	std	Z+1, r19	; 0x01
    1726:	20 83       	st	Z, r18
    1728:	8c 93       	st	X, r24
    172a:	26 81       	ldd	r18, Z+6	; 0x06
    172c:	37 81       	ldd	r19, Z+7	; 0x07
    172e:	2f 5f       	subi	r18, 0xFF	; 255
    1730:	3f 4f       	sbci	r19, 0xFF	; 255
    1732:	37 83       	std	Z+7, r19	; 0x07
    1734:	26 83       	std	Z+6, r18	; 0x06
    1736:	14 c0       	rjmp	.+40     	; 0x1760 <fputc+0x6e>
    1738:	8b 01       	movw	r16, r22
    173a:	ec 01       	movw	r28, r24
    173c:	fb 01       	movw	r30, r22
    173e:	00 84       	ldd	r0, Z+8	; 0x08
    1740:	f1 85       	ldd	r31, Z+9	; 0x09
    1742:	e0 2d       	mov	r30, r0
    1744:	09 95       	icall
    1746:	89 2b       	or	r24, r25
    1748:	e1 f6       	brne	.-72     	; 0x1702 <fputc+0x10>
    174a:	d8 01       	movw	r26, r16
    174c:	16 96       	adiw	r26, 0x06	; 6
    174e:	8d 91       	ld	r24, X+
    1750:	9c 91       	ld	r25, X
    1752:	17 97       	sbiw	r26, 0x07	; 7
    1754:	01 96       	adiw	r24, 0x01	; 1
    1756:	17 96       	adiw	r26, 0x07	; 7
    1758:	9c 93       	st	X, r25
    175a:	8e 93       	st	-X, r24
    175c:	16 97       	sbiw	r26, 0x06	; 6
    175e:	ce 01       	movw	r24, r28
    1760:	df 91       	pop	r29
    1762:	cf 91       	pop	r28
    1764:	1f 91       	pop	r17
    1766:	0f 91       	pop	r16
    1768:	08 95       	ret

0000176a <sprintf>:
    176a:	ae e0       	ldi	r26, 0x0E	; 14
    176c:	b0 e0       	ldi	r27, 0x00	; 0
    176e:	eb eb       	ldi	r30, 0xBB	; 187
    1770:	fb e0       	ldi	r31, 0x0B	; 11
    1772:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__prologue_saves__+0x1c>
    1776:	0d 89       	ldd	r16, Y+21	; 0x15
    1778:	1e 89       	ldd	r17, Y+22	; 0x16
    177a:	86 e0       	ldi	r24, 0x06	; 6
    177c:	8c 83       	std	Y+4, r24	; 0x04
    177e:	1a 83       	std	Y+2, r17	; 0x02
    1780:	09 83       	std	Y+1, r16	; 0x01
    1782:	8f ef       	ldi	r24, 0xFF	; 255
    1784:	9f e7       	ldi	r25, 0x7F	; 127
    1786:	9e 83       	std	Y+6, r25	; 0x06
    1788:	8d 83       	std	Y+5, r24	; 0x05
    178a:	ae 01       	movw	r20, r28
    178c:	47 5e       	subi	r20, 0xE7	; 231
    178e:	5f 4f       	sbci	r21, 0xFF	; 255
    1790:	6f 89       	ldd	r22, Y+23	; 0x17
    1792:	78 8d       	ldd	r23, Y+24	; 0x18
    1794:	ce 01       	movw	r24, r28
    1796:	01 96       	adiw	r24, 0x01	; 1
    1798:	0e 94 d7 06 	call	0xdae	; 0xdae <vfprintf>
    179c:	ef 81       	ldd	r30, Y+7	; 0x07
    179e:	f8 85       	ldd	r31, Y+8	; 0x08
    17a0:	e0 0f       	add	r30, r16
    17a2:	f1 1f       	adc	r31, r17
    17a4:	10 82       	st	Z, r1
    17a6:	2e 96       	adiw	r28, 0x0e	; 14
    17a8:	e4 e0       	ldi	r30, 0x04	; 4
    17aa:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__epilogue_restores__+0x1c>

000017ae <__ultoa_invert>:
    17ae:	fa 01       	movw	r30, r20
    17b0:	aa 27       	eor	r26, r26
    17b2:	28 30       	cpi	r18, 0x08	; 8
    17b4:	51 f1       	breq	.+84     	; 0x180a <__ultoa_invert+0x5c>
    17b6:	20 31       	cpi	r18, 0x10	; 16
    17b8:	81 f1       	breq	.+96     	; 0x181a <__ultoa_invert+0x6c>
    17ba:	e8 94       	clt
    17bc:	6f 93       	push	r22
    17be:	6e 7f       	andi	r22, 0xFE	; 254
    17c0:	6e 5f       	subi	r22, 0xFE	; 254
    17c2:	7f 4f       	sbci	r23, 0xFF	; 255
    17c4:	8f 4f       	sbci	r24, 0xFF	; 255
    17c6:	9f 4f       	sbci	r25, 0xFF	; 255
    17c8:	af 4f       	sbci	r26, 0xFF	; 255
    17ca:	b1 e0       	ldi	r27, 0x01	; 1
    17cc:	3e d0       	rcall	.+124    	; 0x184a <__ultoa_invert+0x9c>
    17ce:	b4 e0       	ldi	r27, 0x04	; 4
    17d0:	3c d0       	rcall	.+120    	; 0x184a <__ultoa_invert+0x9c>
    17d2:	67 0f       	add	r22, r23
    17d4:	78 1f       	adc	r23, r24
    17d6:	89 1f       	adc	r24, r25
    17d8:	9a 1f       	adc	r25, r26
    17da:	a1 1d       	adc	r26, r1
    17dc:	68 0f       	add	r22, r24
    17de:	79 1f       	adc	r23, r25
    17e0:	8a 1f       	adc	r24, r26
    17e2:	91 1d       	adc	r25, r1
    17e4:	a1 1d       	adc	r26, r1
    17e6:	6a 0f       	add	r22, r26
    17e8:	71 1d       	adc	r23, r1
    17ea:	81 1d       	adc	r24, r1
    17ec:	91 1d       	adc	r25, r1
    17ee:	a1 1d       	adc	r26, r1
    17f0:	20 d0       	rcall	.+64     	; 0x1832 <__ultoa_invert+0x84>
    17f2:	09 f4       	brne	.+2      	; 0x17f6 <__ultoa_invert+0x48>
    17f4:	68 94       	set
    17f6:	3f 91       	pop	r19
    17f8:	2a e0       	ldi	r18, 0x0A	; 10
    17fa:	26 9f       	mul	r18, r22
    17fc:	11 24       	eor	r1, r1
    17fe:	30 19       	sub	r19, r0
    1800:	30 5d       	subi	r19, 0xD0	; 208
    1802:	31 93       	st	Z+, r19
    1804:	de f6       	brtc	.-74     	; 0x17bc <__ultoa_invert+0xe>
    1806:	cf 01       	movw	r24, r30
    1808:	08 95       	ret
    180a:	46 2f       	mov	r20, r22
    180c:	47 70       	andi	r20, 0x07	; 7
    180e:	40 5d       	subi	r20, 0xD0	; 208
    1810:	41 93       	st	Z+, r20
    1812:	b3 e0       	ldi	r27, 0x03	; 3
    1814:	0f d0       	rcall	.+30     	; 0x1834 <__ultoa_invert+0x86>
    1816:	c9 f7       	brne	.-14     	; 0x180a <__ultoa_invert+0x5c>
    1818:	f6 cf       	rjmp	.-20     	; 0x1806 <__ultoa_invert+0x58>
    181a:	46 2f       	mov	r20, r22
    181c:	4f 70       	andi	r20, 0x0F	; 15
    181e:	40 5d       	subi	r20, 0xD0	; 208
    1820:	4a 33       	cpi	r20, 0x3A	; 58
    1822:	18 f0       	brcs	.+6      	; 0x182a <__ultoa_invert+0x7c>
    1824:	49 5d       	subi	r20, 0xD9	; 217
    1826:	31 fd       	sbrc	r19, 1
    1828:	40 52       	subi	r20, 0x20	; 32
    182a:	41 93       	st	Z+, r20
    182c:	02 d0       	rcall	.+4      	; 0x1832 <__ultoa_invert+0x84>
    182e:	a9 f7       	brne	.-22     	; 0x181a <__ultoa_invert+0x6c>
    1830:	ea cf       	rjmp	.-44     	; 0x1806 <__ultoa_invert+0x58>
    1832:	b4 e0       	ldi	r27, 0x04	; 4
    1834:	a6 95       	lsr	r26
    1836:	97 95       	ror	r25
    1838:	87 95       	ror	r24
    183a:	77 95       	ror	r23
    183c:	67 95       	ror	r22
    183e:	ba 95       	dec	r27
    1840:	c9 f7       	brne	.-14     	; 0x1834 <__ultoa_invert+0x86>
    1842:	00 97       	sbiw	r24, 0x00	; 0
    1844:	61 05       	cpc	r22, r1
    1846:	71 05       	cpc	r23, r1
    1848:	08 95       	ret
    184a:	9b 01       	movw	r18, r22
    184c:	ac 01       	movw	r20, r24
    184e:	0a 2e       	mov	r0, r26
    1850:	06 94       	lsr	r0
    1852:	57 95       	ror	r21
    1854:	47 95       	ror	r20
    1856:	37 95       	ror	r19
    1858:	27 95       	ror	r18
    185a:	ba 95       	dec	r27
    185c:	c9 f7       	brne	.-14     	; 0x1850 <__ultoa_invert+0xa2>
    185e:	62 0f       	add	r22, r18
    1860:	73 1f       	adc	r23, r19
    1862:	84 1f       	adc	r24, r20
    1864:	95 1f       	adc	r25, r21
    1866:	a0 1d       	adc	r26, r0
    1868:	08 95       	ret

0000186a <_exit>:
    186a:	f8 94       	cli

0000186c <__stop_program>:
    186c:	ff cf       	rjmp	.-2      	; 0x186c <__stop_program>
